{"target_folder":"1145","files":[{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\JavaScript\\Trevera.Facets.Extension.js","type":"application/javascript","contents":"// Exclude additional facets from the faceted navigation on search and category pages\r\n// usage in templates:\r\n// <div data-view=\"Facets.FacetedNavigationItems\" data-exclude-facets=\"commercecategoryname,category{{additionalExclude}}\"></div>\r\n// copy template into theme.\r\ndefine(\r\n  'Trevera.Facets.Extension'\r\n  , [\r\n    'Utils',\r\n    'underscore',\r\n    'jQuery'\r\n  ]\r\n  , function (\r\n    Utils,\r\n    _,\r\n    jQuery\r\n  ) {\r\n    'use strict';\r\n\r\n    return {\r\n      toggleMenu: function (e) {\r\n        var $target  = jQuery(e.currentTarget);\r\n        var descArea = $target.parent('.facets-item-cell-grid-desc').find('.description-copy');\r\n        if (jQuery(descArea).hasClass('open')) {\r\n          jQuery(descArea).removeClass('open');\r\n          $target.text('more...')\r\n        }\r\n        else {\r\n          jQuery(descArea).addClass('open');\r\n          $target.text('less...')\r\n        }\r\n      },\r\n\r\n      mountToApp: function mountToApp(container) {\r\n        var PLP         = container.getComponent('PLP')\r\n          , LAYOUT      = container.getComponent('Layout')\r\n          , ENVIRONMENT = container.getComponent('Environment')\r\n          , PROFILE     = container.getComponent('UserProfile');\r\n\r\n        var profile_model;\r\n\r\n        PROFILE.getUserProfile().done(function (profile) {\r\n          profile_model = profile;\r\n          if (!profile_model.internalid) {\r\n            SC.PROFILE_PROMISE.done(function (data) {\r\n              profile_model = data;\r\n              console.log(data)\r\n            });\r\n          }\r\n        });\r\n\r\n        if (PLP && LAYOUT) {\r\n\r\n          LAYOUT.addToViewContextDefinition(\r\n            'Facets.Browse.View'\r\n            , 'treveraExtras'\r\n            , 'object'\r\n            , function treveraExtras(context) {\r\n\r\n              var categoryInfo = PLP.getCategoryInfo() || {};\r\n              var cssClass     = \"category-level-unknown\";\r\n              if (categoryInfo && categoryInfo.idpath) {\r\n                cssClass = \"category-level-\" + categoryInfo.idpath.split(\"|\").length\r\n              }\r\n              if (categoryInfo && categoryInfo.fullurl) {\r\n                cssClass = \"category-level-\" + categoryInfo.fullurl.split(\"/\").length\r\n              }\r\n\r\n              var filters           = PLP.getAllFilters()\r\n                , facets            = _.filter(filters, function (filter) {\r\n                return filter.id !== 'category' && filter.values && filter.values.length > 1\r\n              })\r\n                , hasSelectedFacets = _.size(facets) > 0\r\n                , hasSubcategories  = _.size(categoryInfo) > 0 //this.model.get('category') ? this.model.get('category').get('categories').length > 0 :// false\r\n                , hasItems          = PLP.getItemsInfo().length > 0;\r\n              return {\r\n                categoryLevelCSSClass : cssClass,\r\n                additionalExclude     : ',' + ENVIRONMENT.getConfig('trevera.facets.excludedFacets'),\r\n                narrowByCopy          : ENVIRONMENT.getConfig('trevera.facets.narrowByCopy') || \"Narrow By\",\r\n                showCategoryCellsTitle: categoryInfo.categories && categoryInfo.categories.length > 0 && ENVIRONMENT.getConfig('trevera.facets.showSubCategoryTitle'),\r\n                categoryCellsTitle    : ENVIRONMENT.getConfig('trevera.facets.subcategoryTitle') || \"Browse by Category\",\r\n                hasSelectedFacets     : hasSelectedFacets,\r\n                hasSubcategories      : hasSubcategories,\r\n                showItems             : hasItems || (!hasItems && hasSelectedFacets) || !(!hasItems && !hasSelectedFacets && hasSubcategories),\r\n                hasFacets             : false //facets.length > 0\r\n              }\r\n\r\n            }\r\n          );\r\n\r\n          LAYOUT.addToViewContextDefinition(\r\n            'Facets.ItemCell.View'\r\n            , 'treveraExtras'\r\n            , 'object'\r\n            , function treveraExtras(context) {\r\n              var items = PLP.getItemsInfo()\r\n                , item  = _.find(items, {internalid: context.itemId});\r\n\r\n              var thumbnail             = context.thumbnail;\r\n              var images                = item.itemimages_detail ? item.itemimages_detail : \"\";\r\n              var filters               = _.find(PLP.getFilters(), function (filter) {\r\n                return filter.id == customColorId\r\n              });\r\n              var filterValueNormalized = !!filters && filters.value ? filters.value[0].replace(/-/g, ' ').replace(/~/g, '-') : '';\r\n              if (images && filters && filters.value[0] && (images[filters.value[0]] || images[filterValueNormalized])) {\r\n                _.each(filters.value, function (filter) {\r\n                  if (images[filter] && images[filter].urls) {\r\n                    thumbnail = images[filter].urls[0];\r\n                  }\r\n                  if (images[filterValueNormalized] && images[filterValueNormalized].urls) {\r\n                    thumbnail = images[filterValueNormalized].urls[0];\r\n                  }\r\n                });\r\n              }\r\n\r\n              var filters     = _.find(PLP.getFilters(), function (filter) { return filter.id == customColorId })\r\n                , existingUrl = context.url;\r\n              return {\r\n                thumbnail           : thumbnail,\r\n                url                 : existingUrl,\r\n                isEnvironmentBrowser: SC.ENVIRONMENT.jsEnvironment === 'browser',\r\n                isTouch             : SC.ENVIRONMENT.isTouchEnabled,\r\n                isSmallScreen       : Utils.getViewportWidth() < 768,\r\n                storeDescription    : item.storedescription,\r\n                isLoggedIn          : profile_model.isloggedin,\r\n                itemResizeIDs       : {\r\n                  grid   : ENVIRONMENT.getConfig('trevera.facets.gridResizeID') || 'thumbnail'\r\n                  , table: ENVIRONMENT.getConfig('trevera.facets.tableResizeID') || 'thumbnail'\r\n                  , list : ENVIRONMENT.getConfig('trevera.facets.listResizeID') || 'thumbnail'\r\n                }\r\n              }\r\n            }\r\n          );\r\n\r\n          var self = this;\r\n          //handle descriptions on PLP\r\n          LAYOUT.addToViewEventsDefinition(\r\n            'Facets.ItemCell.View',\r\n            'click [data-action=\"show-full-description\"]',\r\n            function (event) {\r\n              self.toggleMenu(event);\r\n            }\r\n          );\r\n        }\r\n\r\n      }\r\n    }\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\JavaScript\\Trevera.PDP.Helpers.js","type":"application/javascript","contents":"define('Trevera.PDP.Helpers'\r\n  , [\r\n    'Backbone',\r\n    'Utils',\r\n    'jQuery',\r\n    'underscore'\r\n  ], function (\r\n    Backbone,\r\n    Utils,\r\n    jQuery,\r\n    _\r\n  ) {\r\n    'use strict';\r\n\r\n    var _channelFieldID = 'custentity_ecomm_channel';\r\n    var _jumpstartMax   = 2;\r\n\r\n    return {\r\n      checkForQuantity: function checkForQuantity(PDP, LAYOUT) {\r\n        var selectedChilds = PDP.getSelectedMatrixChilds();\r\n        if (selectedChilds.length === 1) {\r\n          console.log('check for max', selectedChilds[0]);\r\n          if (!selectedChilds[0].isbackorderable) {\r\n            var currentQuantity = parseInt(jQuery('.product-details-quantity-value').val());\r\n            console.log(currentQuantity, selectedChilds[0].quantityavailable);\r\n            if (currentQuantity > selectedChilds[0].quantityavailable) {\r\n              PDP.setQuantity(selectedChilds[0].quantityavailable);\r\n              LAYOUT.showMessage({\r\n                message : 'You have added more to your cart than what is available. We\\'ve adjusted the quantity for you.',\r\n                type    : 'error',\r\n                selector: 'Product.Price',\r\n                timeout : 5000\r\n              });\r\n            }\r\n          }\r\n        }\r\n      },\r\n\r\n      setSingleOptions: function setSingleOptions(PDP) {\r\n        var selectedChilds = PDP.getSelectedMatrixChilds();\r\n\r\n        var item          = PDP.getItemInfo();\r\n        var matrixOptions = _.filter(item.options, {isMatrixDimension: true}); // find matrix dimensions\r\n        var optionMap     = {};\r\n\r\n        _.each(matrixOptions, function (option) { // map matrix options to values on available matrix children\r\n          optionMap[option.itemOptionId] = _.uniq(_.pluck(selectedChilds, option.itemOptionId));\r\n        });\r\n\r\n        _.each(matrixOptions, function (option) {\r\n          // console.log(option, option.value, optionMap[option.itemOptionId]);\r\n          // console.log('option.value', option.value);\r\n          if ((!option.value || _.isUndefined(option.value)) && optionMap[option.itemOptionId].length === 1 && optionMap[option.itemOptionId][0].length > 0) {\r\n            // if the value isn't set for the option and there is only one available option\r\n            var matchingOptionValue = _.where(option.values, {label: optionMap[option.itemOptionId][0]}); // find the internalid\r\n            if (_.size(matchingOptionValue) === 1 && parseInt(matchingOptionValue[0].internalid) > 0) {\r\n              PDP.setOption(option.cartOptionId, matchingOptionValue[0].internalid); // set the option\r\n            }\r\n          }\r\n          if (optionMap[option.itemOptionId].length === 1 && optionMap[option.itemOptionId][0].length > 0) {\r\n            // TODO: Hide the option selector here using jQuery\r\n            // console.log('option.cartOptionId', option.cartOptionId);\r\n            var selector  = '#' + option.cartOptionId + '-container';\r\n            var $selector = jQuery(selector);\r\n            // console.log('selector', selector);\r\n            // console.log('$selector', $selector);\r\n            // console.log('$selector.length', $selector.length);\r\n            $selector.hide();\r\n          }\r\n        });\r\n      },\r\n\r\n      limitQuantityFeatureOn: function (container) {\r\n        var PDP    = container.getComponent('PDP');\r\n        var LAYOUT = container.getComponent('Layout');\r\n        var self   = this;\r\n\r\n        if (PDP) {\r\n          LAYOUT.addToViewContextDefinition(\r\n            'ProductDetails.Quantity.View'\r\n            , 'quantityAvailable'\r\n            , 'string'\r\n            , function quantityAvailable(context) {\r\n              var matrxiChilds = PDP.getSelectedMatrixChilds(); // get all matrix children\r\n              if (matrxiChilds.length === 1) { // if length == 1 then matrix is fully configured\r\n                var child = _.find(context.model.item.matrixchilditems_detail, function (childs) {\r\n                  return childs.internalid === matrxiChilds[0].internalid;\r\n                });\r\n                if (!!child) {\r\n                  return child.isbackorderable ? 1000 : child.quantityavailable;\r\n                }\r\n              }\r\n              // if matrix not fully configured or non matrix item, use whats on the model\r\n              if (context.model && context.model.item) {\r\n                return context.model.item.isbackorderable ? 1000 : context.model.item.quantityavailable;\r\n              }\r\n              return 1000;\r\n            }\r\n          );\r\n\r\n          PDP.on('afterOptionSelection', function (data) {\r\n            var matrixChilds   = PDP.getAllMatrixChilds();\r\n            var selectedChilds = PDP.getSelectedMatrixChilds();\r\n            if (matrixChilds.length === selectedChilds.length && matrixChilds.length > 1) {  // no option selected and there is more than one possible matrix child\r\n              jQuery('.product-details-quantity-value').prop('max', 1);\r\n            }\r\n            else {\r\n              if (selectedChilds.length === 1) {\r\n                // console.log('selector', selector);\r\n                jQuery('.product-details-quantity-value').prop('max', selectedChilds[0].isbackorderable ? 1000 : selectedChilds[0].quantityavailable);\r\n              }\r\n              else {\r\n                jQuery('.product-details-quantity-value').prop('max', 1);\r\n              }\r\n            }\r\n          });\r\n\r\n          PDP.on('afterShowContent', function (data) {\r\n            self.checkForQuantity(PDP, LAYOUT);\r\n          });\r\n\r\n          PDP.on('afterQuantityChange', function (data) {\r\n            self.checkForQuantity(PDP, LAYOUT)\r\n          });\r\n        }\r\n      },\r\n\r\n      limitQuantityFeaturePerChannelOn: function (config, limitQuantitiesOn, profile, container) {\r\n        console.log('limitQuantityFeaturePerChannelOn')\r\n        var customFields    = profile && profile.customfields;\r\n        var channelField    = _.find(customFields, {id: _channelFieldID});\r\n        var channelsToLimit = config.channelsToEnforce ? config.channelsToEnforce.split(',').map(function (channel) {return channel.trim()}) : []\r\n        var PDP             = container.getComponent('PDP');\r\n        var LAYOUT          = container.getComponent('Layout');\r\n        var CART            = container.getComponent('Cart');\r\n        var self            = this;\r\n        var cartLines;\r\n        CART.getLines().then(function (lines) { cartLines = lines });\r\n\r\n        if (PDP && channelsToLimit.indexOf(channelField.value) > -1 && config.enabled) {\r\n          LAYOUT.addToViewContextDefinition(\r\n            'ProductDetails.Quantity.View'\r\n            , 'hfExtras'\r\n            , 'object'\r\n            , function hfExtras(context) {\r\n              var maxQuantity = false;\r\n              console.log('ProductDetails.Quantity.View', context);\r\n              var matrxiChilds = PDP.getSelectedMatrixChilds(); // get all matrix children\r\n              if (matrxiChilds.length === 1) { // if length == 1 then matrix is fully configured\r\n                var child = _.find(context.model.item.matrixchilditems_detail, function (childs) {\r\n                  return childs.internalid === matrxiChilds[0].internalid;\r\n                });\r\n                if (!!child) {\r\n                  maxQuantity = Number(child[config.repQuantityFieldOnItem]) > 0\r\n                    ? Number(child[config.repQuantityFieldOnItem]) : limitQuantitiesOn\r\n                      ? 1000 : child.quantityavailable;\r\n                }\r\n              }\r\n              // if matrix not fully configured or non matrix item, use what's on the model\r\n              if (context.model && context.model.item) {\r\n                maxQuantity = Number(context.model.item[config.repQuantityFieldOnItem]) > 0\r\n                  ? Number(context.model.item[config.repQuantityFieldOnItem]) : context.model.item.isbackorderable\r\n                    ? 1000 : context.model.item.quantityavailable;\r\n              }\r\n              var qtyInCart     = 0;\r\n              var matchingLines = _.filter(cartLines, function (line) { return line.item.internalid === context.model.item.internalid });\r\n              qtyInCart         = matchingLines.reduce(function (num, line) { return num + line.quantity }, 0);\r\n              console.log('self.getQuantityInCart(CART, context)', qtyInCart);\r\n              if (qtyInCart > maxQuantity) {\r\n                self.checkLineQuantity(config, CART, LAYOUT, context.model.item.internalid)\r\n              }\r\n              return {\r\n                limitQuantity   : maxQuantity > 0,\r\n                max             : maxQuantity,\r\n                maxAllowed      : qtyInCart > maxQuantity ? 0 : maxQuantity - qtyInCart,\r\n                isQtyAddDisabled: maxQuantity > 0 ? context.model.quantity >= maxQuantity : false,\r\n                showAddToCart   : qtyInCart < maxQuantity && qtyInCart != maxQuantity\r\n              };\r\n            }\r\n          );\r\n\r\n          LAYOUT.addToViewContextDefinition(\r\n            'Cart.AddToCart.Button.View'\r\n            , 'isCurrentItemPurchasable'\r\n            , 'boolean'\r\n            , function isCurrentItemPurchasable(context) {\r\n              var details = PDP.getItemInfo();\r\n              if (details && details.item) {\r\n                var max = details.item[config.repQuantityFieldOnItem] || 0;\r\n                if (max > 0) {\r\n                  var currentQty = self.getQuantityInCart(cartLines, details.item.internalid)\r\n                  return currentQty < max;\r\n                }\r\n              }\r\n              return context.isCurrentItemPurchasable\r\n            }\r\n          );\r\n\r\n          LAYOUT.addToViewContextDefinition(\r\n            'Cart.Item.Summary.View'\r\n            , 'hfExtras'\r\n            , 'object'\r\n            , function hfExtras(context) {\r\n              console.log('Cart.Item.Summary.View.trvExtras', context)\r\n              var maxQty = 0, currentQty = 0;\r\n              if (context.line && context.line.item) {\r\n                var maxQty = context.line.item[config.repQuantityFieldOnItem] || 0;\r\n                if (maxQty > 0) {\r\n                  currentQty = self.getQuantityInCart(cartLines, context.line.item.internalid)\r\n                }\r\n              }\r\n              return {\r\n                maximumQuantity    : maxQty,\r\n                showControls       : maxQty > 0 ? currentQty > maxQty : true,\r\n                showMaximumQuantity: maxQty > 0\r\n              }\r\n            }\r\n          );\r\n\r\n          CART.on('beforeAddLine', function (line) {\r\n            console.log('beforeAddLine', line);\r\n            CART.getLines().then(function (lines) {\r\n\r\n            })\r\n          });\r\n          CART.on('afterAddLine', function (line) {\r\n            console.log('afterAddLine', line);\r\n            CART.getLines().then(function (lines) { cartLines = lines });\r\n            self.checkLineQuantity(config, CART, LAYOUT, line.line.item.internalid);\r\n          })\r\n          CART.on('afterUpdateLine', function (line) {\r\n            console.log('afterUpdateLine', line);\r\n            CART.getLines().then(function (lines) { cartLines = lines });\r\n            self.checkLineQuantity(config, CART, LAYOUT, line.line.item.internalid);\r\n          })\r\n\r\n        }\r\n        else {\r\n          LAYOUT.addToViewContextDefinition(\r\n            'Cart.Item.Summary.View'\r\n            , 'hfExtras'\r\n            , 'object'\r\n            , function hfExtras(context) {\r\n              console.log('Cart.Item.Summary.View.trvExtras', context)\r\n              return {\r\n                showControls       : true,\r\n                showMaximumQuantity: false\r\n              }\r\n            }\r\n          );\r\n          LAYOUT.addToViewContextDefinition(\r\n            'ProductDetails.Quantity.View'\r\n            , 'hfExtras'\r\n            , 'object'\r\n            , function hfExtras(context) {\r\n              return {\r\n                limitQuantity   : false,\r\n                isQtyAddDisabled: false,\r\n                showAddToCart   : true\r\n              };\r\n            });\r\n        }\r\n      },\r\n\r\n      handleJumpstartItems: function (CART, LAYOUT) {\r\n        var self = this;\r\n        CART.on('afterShowContent', function (data) {\r\n          console.log('afterShowContent', data);\r\n          self.checkLineQuantityMatrixFromParent(CART, LAYOUT, 5720);\r\n          self.checkLineQuantityMatrixFromParent(CART, LAYOUT, 5689);\r\n          self.checkLineQuantityMatrixFromParent(CART, LAYOUT, 5819);\r\n        })\r\n        CART.on('afterAddLine', function (line) {\r\n          console.log('afterAddLine', line);\r\n          self.checkLineQuantityMatrix(CART, LAYOUT, line.line.item.internalid);\r\n        })\r\n        CART.on('afterUpdateLine', function (line) {\r\n          console.log('afterUpdateLine', line);\r\n          self.checkLineQuantityMatrix(CART, LAYOUT, line.line.item.internalid);\r\n        })\r\n        /*CART.on('beforeAddLine', function (line) {\r\n          console.log('beforeAddLine', line);\r\n          return self.canAddJumpstartItemToCart(CART, LAYOUT, line.line.item.internalid);\r\n        })*/\r\n      },\r\n\r\n      getQuantityInCart: function getQuantityInCart(cartLines, itemId) {\r\n        var matchingLines = _.filter(cartLines, function (line) {\r\n          return line.item.internalid === itemId;\r\n        });\r\n        return matchingLines.reduce(function (num, line) {\r\n          return num + line.quantity\r\n        }, 0);\r\n      },\r\n\r\n      checkLineQuantity: function checkLineQuantity(config, CART, LAYOUT, itemId) {\r\n        CART.getLines().then(function (lines) {\r\n          var matchingLines = _.filter(lines, function (line) {\r\n            return line.item.internalid === itemId;\r\n          });\r\n          const cartQty     = matchingLines.reduce(function (num, line) {\r\n            return num + line.quantity\r\n          }, 0);\r\n          if (matchingLines.length > 0) {\r\n            var maxQty = matchingLines[0].item.extras[config.repQuantityFieldOnItem] || null;\r\n            if (!!maxQty && cartQty > maxQty) {\r\n              if (matchingLines.length > 1) {\r\n                var linesToRemove = matchingLines.shift(); // remove the first line from the found array\r\n                if (linesToRemove.length > 0) {\r\n                  var linesRemoved = 0;\r\n                  for (var line = 0; line < linesToRemove.length; line++) {\r\n                    CART.removeLine({line_id: linesToRemove[line].internalid}).then(function () {linesRemoved++;});\r\n                  }\r\n                  console.log('lines removed: ', linesRemoved);\r\n                }\r\n              }\r\n              CART.updateLine({\r\n                line: {internalid: matchingLines[0].internalid, quantity: maxQty}\r\n              }).then(function () {\r\n                LAYOUT.showMessage({message: 'You have added more to your cart than what is available. We\\'ve adjusted the quantity for you.', type: 'error', selector: 'Product.Price', timeout: 5000});\r\n                console.log('Line update finished');\r\n                return false;\r\n              }).fail(function (data) {\r\n                console.log(data)\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            return true\r\n          }\r\n          console.log('matchingLines', matchingLines, cartQty);\r\n        });\r\n      },\r\n\r\n      canAddJumpstartItemToCart: function canAddJumpstartItemToCart(CART, LAYOUT, itemId) {\r\n        var cartLinesCheckPromise = jQuery.Deferred();\r\n        CART.getLines().then(function (lines) {\r\n          var matchingLinesOnMatrix = _.filter(lines, function (line) {\r\n            return line.item.extras.matrix_parent && [5720, 5689, 5819].indexOf(line.item.extras.matrix_parent.internalid) > -1;\r\n          });\r\n          if (matchingLinesOnMatrix.length > 0) {\r\n            const cartQty = matchingLinesOnMatrix.reduce(function (num, line) {\r\n              return num + line.quantity\r\n            }, 0);\r\n            if (cartQty > _jumpstartMax) {\r\n              return cartLinesCheckPromise.reject({errorCode: 'ERR_MAX_ITEMS', errorMessage: Utils.translate('You already have the max in your cart')});\r\n            }\r\n            else {\r\n              return cartLinesCheckPromise.resolve();\r\n            }\r\n          }\r\n          else {\r\n            return cartLinesCheckPromise.resolve();\r\n          }\r\n        });\r\n        return cartLinesCheckPromise;\r\n      },\r\n\r\n      checkLineQuantityMatrix: function checkLineQuantityMatrix(CART, LAYOUT, itemId) {\r\n        CART.getLines().then(function (lines) {\r\n          var matchingLines = _.filter(lines, function (line) {\r\n            return line.item.internalid === itemId;\r\n          });\r\n          console.log('matching lines', matchingLines);\r\n          var parentID = 0;\r\n          if (matchingLines.length > 0) {\r\n            parentID = matchingLines[0].item.extras.matrix_parent && matchingLines[0].item.extras.matrix_parent.internalid || 0;\r\n          }\r\n          if (parentID > 0) {\r\n            var matchingLinesOnMatrix = _.filter(lines, function (line) {\r\n              return line.item.extras.matrix_parent && line.item.extras.matrix_parent.internalid === parentID;\r\n            });\r\n            if (matchingLinesOnMatrix.length > 0) {\r\n              const cartQty = matchingLinesOnMatrix.reduce(function (num, line) {\r\n                return num + line.quantity\r\n              }, 0);\r\n              if (cartQty > _jumpstartMax) {\r\n                _.each(matchingLinesOnMatrix, function (line) {\r\n                  jQuery('#' + line.internalid + ' .cart-lines-summary').append('<div class=\"global-views-message global-views-message-error\">There is maximum number of ' + _jumpstartMax + ' items allowed for this item. Please adjust your quantities.</div>');\r\n                });\r\n              }\r\n            }\r\n            else {\r\n              return true\r\n            }\r\n          }\r\n          console.log('matchingLines', matchingLines);\r\n        });\r\n      },\r\n\r\n      checkLineQuantityMatrixFromParent: function checkLineQuantityMatrixFromParent(CART, LAYOUT, parentID) {\r\n        CART.getLines().then(function (lines) {\r\n          var matchingLinesOnMatrix = _.filter(lines, function (line) {\r\n            return line.item.extras.matrix_parent && line.item.extras.matrix_parent.internalid === parentID;\r\n          });\r\n          if (matchingLinesOnMatrix.length > 0) {\r\n            const cartQty = matchingLinesOnMatrix.reduce(function (num, line) {\r\n              return num + line.quantity\r\n            }, 0);\r\n            if (cartQty > _jumpstartMax) {\r\n              _.each(matchingLinesOnMatrix, function (line) {\r\n                jQuery('#' + line.internalid + ' .cart-lines-summary').append('<div class=\"global-views-message global-views-message-error\">There is maximum number of ' + _jumpstartMax + ' items allowed for this item. Please adjust your quantities.</div>');\r\n              });\r\n            }\r\n          }\r\n          else {\r\n            return true\r\n          }\r\n        })\r\n      },\r\n\r\n      autoSelectSingleOptionsOn: function (container) {\r\n        var PDP    = container.getComponent('PDP');\r\n        var LAYOUT = container.getComponent('Layout');\r\n        var self   = this;\r\n\r\n        PDP.on('afterOptionSelection', function (data) {\r\n          self.setSingleOptions(PDP);\r\n        });\r\n\r\n        PDP.on('afterShowContent', function (data) {\r\n          self.setSingleOptions(PDP);\r\n        });\r\n      },\r\n\r\n      mountToApp: function mountToApp(container, limitQuantity, autoSelectSingleOptions) {\r\n        var PDP         = container.getComponent('PDP');\r\n        var PLP         = container.getComponent('PLP');\r\n        var LAYOUT      = container.getComponent('Layout');\r\n        var ENVIRONMENT = container.getComponent('Environment');\r\n        var self        = this;\r\n\r\n        if (limitQuantity) this.limitQuantityFeatureOn(container);\r\n        if (autoSelectSingleOptions) this.autoSelectSingleOptionsOn(container);\r\n\r\n        if (PDP) {\r\n          PDP.on('afterOptionSelection', function (data) {\r\n            // handle that the view doesn't rerender by swapping classes\r\n            setTimeout(function () {\r\n              jQuery('.product-views-option-color-picker-box-img').siblings('span[data-availability-label]').removeClass('is-available-false').addClass('is-available-true'); //reset all\r\n              jQuery('.product-views-option-color-picker-box-img.muted').siblings('span[data-availability-label]').removeClass('is-available-true').addClass('is-available-false');\r\n              jQuery('.product-views-option-color-picker-box-img.active').siblings('span[data-availability-label]').removeClass('is-available-false').addClass('is-available-true');\r\n            }, 100);\r\n\r\n          });\r\n\r\n          PDP.on('beforeShowContent', function (data) {\r\n            if (data === 'ProductDetails.QuickView.View') {\r\n              return;\r\n            }\r\n            //var item = PDP.getItemInfo();\r\n          });\r\n\r\n          PDP.on('afterShowContent', function (data) {\r\n            if (data === 'ProductDetails.QuickView.View') {\r\n              return;\r\n            }\r\n\r\n          });\r\n        }\r\n      }\r\n    };\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\JavaScript\\Trevera.PLP.Extension.js","type":"application/javascript","contents":"define(\r\n  'Trevera.PLP.Extension'\r\n  , [\r\n    'Trevera.Facets.Extension'\r\n    , 'underscore'\r\n  ]\r\n  , function (\r\n    TreveraFacetsExtension\r\n    , _\r\n  ) {\r\n    'use strict';\r\n\r\n    return {\r\n\r\n      mountToApp: function mountToApp(container) {\r\n\r\n        var ENVIRONMENT = container.getComponent('Environment')\r\n          , LAYOUT      = container.getComponent('Layout')\r\n          , PLP         = container.getComponent('PLP');\r\n\r\n        if (PLP) {\r\n          TreveraFacetsExtension.mountToApp(container);\r\n        }\r\n\r\n        if (LAYOUT) {\r\n\r\n        }\r\n      }\r\n    };\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\JavaScript\\Trevera.ProductDetails.Information.View.Extension.js","type":"application/javascript","contents":"// @module Trevera.ProductDetails.Information.View.Extension\r\n// allow for concatenating\r\n\r\ndefine('Trevera.ProductDetails.Information.View.Extension'\r\n  , [\r\n    'product_details_information.tpl'\r\n    , 'Utils'\r\n    , 'Backbone'\r\n    , 'jQuery'\r\n    , 'underscore'\r\n  ]\r\n  , function (\r\n    product_details_information_tpl\r\n    , Utils\r\n    , Backbone\r\n    , jQuery\r\n    , _\r\n  ) {\r\n    'use strict';\r\n\r\n    // @class Trevera.ProductDetails.Information.View.Extension @extends Backbone.View\r\n    return Backbone.View.extend({\r\n\r\n      template: product_details_information_tpl\r\n\r\n      , events: {}\r\n\r\n      , contextDataRequest: ['item']\r\n\r\n      , initialize: function initialize(options) {\r\n        Backbone.View.prototype.initialize.apply(this, arguments);\r\n        this.application = options.application;\r\n        this.ENVIRONMENT = this.options.application.getComponent('Environment');\r\n\r\n      }\r\n\r\n      , render: function () {\r\n        this.details = this.details || this.computeDetailsArea();\r\n        this._render();\r\n      }\r\n\r\n      , computeDetailsArea: function () {\r\n        var self    = this\r\n          , details = [];\r\n\r\n        var item_model = this.contextData.item();\r\n\r\n        // allows multiple keys to be passed in. Item field values are concatenated\r\n        _.each(this.ENVIRONMENT.getConfig('productDetailsInformation', []), function (item_information) {\r\n          var content = '';\r\n\r\n          if (item_information.contentFromKey) {\r\n            content = item_model[item_information.contentFromKey];\r\n          }\r\n\r\n          if (item_information.contentFromKey.indexOf(',') > -1) {\r\n            var keys = _.without(item_information.contentFromKey.split(\",\"), \"\", \" \");\r\n            for (var i = 0; i < keys.length; i++) {\r\n              if (item_model[keys[i]] && item_model[keys[i]].length > 0) {\r\n                ///core/media/media.nl\r\n                var itemContent = item_model[keys[i]];\r\n                if (itemContent.indexOf('/core/media/media.nl') == 0) {\r\n                  content += '<div class=\"product-details-full-imformation-view-multiple\">'\r\n                    + '<img src=\"' + itemContent + '\" alt=\"image of ' + item_information.name + ' \" />' + '</div>';\r\n                } else {\r\n                  content += '<div class=\"product-details-full-imformation-view-multiple\">' + item_model[keys[i]] + '</div>';\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            var itemContent = item_model[item_information.contentFromKey];\r\n            if (itemContent.indexOf('/core/media/media.nl') == 0) {\r\n              content = '<img src=\"' + itemContent + '\" alt=\"image of ' + item_information.name + ' \" />'\r\n            } else {\r\n              content = itemContent;\r\n            }\r\n          }\r\n\r\n          if (content && Utils.trim(content)) {\r\n            //@class ProductDetails.Information.DataContainer\r\n            details.push({\r\n              //@property {String} name\r\n              name: item_information.name\r\n              //@property {String} content Any string and event valid HTML is allowed\r\n              , content: content\r\n              //@property {String} itemprop\r\n              , itemprop: item_information.itemprop\r\n            });\r\n            //@class ProductDetails.Information.View\r\n          }\r\n        });\r\n\r\n        return details;\r\n      }\r\n\r\n      , getContext: function () {\r\n        this.computeDetailsArea();\r\n\r\n        return {\r\n          //@property {Boolean} showInformation\r\n          showInformation: this.details.length > 0\r\n          //@property {Boolean} showHeader\r\n          , showHeader: this.details.length < 2\r\n          //@property {Array<ProductDetails.Information.DataContainer>} details\r\n          , details: this.details\r\n\r\n          , isNotPageGenerator: !SC.isPageGenerator()\r\n        };\r\n      }\r\n\r\n    });\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\JavaScript\\Trevera.ProductDetails.js","type":"application/javascript","contents":"/*\r\n © 2020 Trevera\r\n */\r\n\r\n//@module ProductDetails\r\ndefine('Trevera.ProductDetails'\r\n  , [\r\n    'Trevera.ProductDetails.Information.View.Extension'\r\n    //, 'Trevera.ProductDetailsAttributes.Extension'\r\n    , 'Trevera.ProductDetails.Slider.Extension'\r\n    , 'Trevera.AddToCart.Message.View'\r\n    , 'Trevera.PDP.Helpers'\r\n    , 'underscore'\r\n    , 'Utils'\r\n    , 'jQuery'\r\n\r\n  ]\r\n  , function (\r\n    ProductDetailsInformationView\r\n    //, ProductDetailsAttributesExtension\r\n    , ProductDetailsImageGalleryVideoView\r\n    , AddToCartMessageView\r\n    , PDPHelpers\r\n    , _\r\n    , Utils\r\n    , jQuery\r\n  ) {\r\n    'use strict';\r\n\r\n    window.CUSTOMIMAGES = {};\r\n\r\n    var customSliderOn          = true;\r\n    var limitQuantityOnItems    = false;\r\n    var autoSelectSingleOptions = false;\r\n\r\n    return {\r\n      mountToApp: function mountToApp(container) {\r\n        var LAYOUT                = container.getComponent('Layout');\r\n        var PDP                   = container.getComponent('PDP');\r\n        var ENVIRONMENT           = container.getComponent('Environment');\r\n        var PROFILE               = container.getComponent('UserProfile');\r\n        var CART                  = container.getComponent('Cart');\r\n        var limitQuantitiesConfig = ENVIRONMENT.getConfig('trevera.limitRepQty') || {};\r\n\r\n        var profile;\r\n        PROFILE.getUserProfile().then(function (data) {\r\n          profile = data;\r\n          LAYOUT.cancelableTrigger('profileComponent:DataLoaded');\r\n          PDPHelpers.limitQuantityFeaturePerChannelOn(limitQuantitiesConfig, limitQuantityOnItems, profile, container)\r\n        });\r\n\r\n        PDPHelpers.mountToApp(container, limitQuantityOnItems, autoSelectSingleOptions);\r\n\r\n        if (PDP) {\r\n          PDPHelpers.handleJumpstartItems(CART, LAYOUT)\r\n          PDP.on('afterOptionSelection', function (data) {\r\n            var matrixChilds   = PDP.getAllMatrixChilds();\r\n            var selectedChilds = PDP.getSelectedMatrixChilds();\r\n            if (matrixChilds.length === selectedChilds.length && matrixChilds.length > 1) {  // no option selected and there is more than one possible matrix child\r\n              jQuery('.product-details-full-matrix-desc').html();\r\n            }\r\n            else {\r\n              if (selectedChilds.length === 1) {\r\n                // console.log('selector', selector);\r\n                jQuery('.product-details-full-matrix-desc').html(selectedChilds[0].custitem_hf_matrix_item_desc);\r\n              }\r\n              else {\r\n                jQuery('.product-details-full-matrix-desc').html();\r\n              }\r\n            }\r\n          });\r\n          //ProductDetailsAttributesExtension.mountToApp(container);\r\n          PDP.addToViewContextDefinition(\r\n            PDP.PDP_FULL_VIEW\r\n            , 'treveraExtras'\r\n            , 'object'\r\n            , function treveraExtras(context) {\r\n              console.log(context)\r\n              var selectedChilds = PDP.getSelectedMatrixChilds();\r\n              console.log('selectedChilds', selectedChilds)\r\n              return {\r\n                isMobile         : Utils.getViewportWidth() < 768,\r\n                showAddToWishList: ENVIRONMENT.getConfig('trevera.pdp.showAddToWishList'),\r\n                showAddToQuote   : ENVIRONMENT.getConfig('trevera.pdp.showAddToQuote') && SC.ENVIRONMENT.permissions.transactions.tranEstimate >= 2,\r\n                showInstagramLink: ENVIRONMENT.getConfig('trevera.pdp.showInstagramLink') && ENVIRONMENT.getConfig('trevera.pdp.instagramLink').length > 0,\r\n                instagramLink    : ENVIRONMENT.getConfig('trevera.pdp.instagramLink'),\r\n                isInStock        : context.model.item.isinstock,\r\n                hasPopupMessage  : context.model.item.custitem_trevera_popup_message && context.model.item.custitem_trevera_popup_message.length > 0,\r\n                customMatrixDesc : selectedChilds.length == 1 ? selectedChilds[0].custitem_hf_matrix_item_desc : ''\r\n              };\r\n            }\r\n          );\r\n\r\n          PDP.addToViewContextDefinition(\r\n            PDP.PDP_QUICK_VIEW\r\n            , 'treveraExtras'\r\n            , 'object'\r\n            , function treveraExtras(context) {\r\n              var hasPopupMessage = context.model.item.custitem_trevera_popup_message && context.model.item.custitem_trevera_popup_message.length\r\n              return {\r\n                storeDescription            : context.model.item.storedescription,\r\n                isMobile                    : Utils.getViewportWidth() < 768,\r\n                showAddToWishList           : ENVIRONMENT.getConfig('trevera.pdp.showAddToWishList'),\r\n                showAddToQuote              : ENVIRONMENT.getConfig('trevera.pdp.showAddToQuote') && SC.ENVIRONMENT.permissions.transactions.tranEstimate >= 2,\r\n                isInStock                   : context.model.item.isinstock,\r\n                hasPopupMessage             : hasPopupMessage,\r\n                popupRequiresAcknowledgement: hasPopupMessage ? context.model.item.custitem_trevera_requires_confirmation : false\r\n              };\r\n            }\r\n          );\r\n\r\n          PDP.addToViewEventsDefinition(\r\n            PDP.PDP_FULL_VIEW,\r\n            'click [data-action=\"show-confirmation-message\"]',\r\n            function (event) {\r\n              event.preventDefault();\r\n              var pdp             = PDP.getItemInfo();\r\n              var popupMessage    = pdp.item.custitem_trevera_popup_message;\r\n              var hasPopupMessage = popupMessage.length > 0;\r\n              if (hasPopupMessage) {\r\n                var popupRequiresAcknowledgement = pdp.item.custitem_trevera_requires_confirmation;\r\n                var modalView                    = new AddToCartMessageView({\r\n                  application        : container,\r\n                  message            : popupMessage,\r\n                  requireConfirmation: popupRequiresAcknowledgement,\r\n                  dataConfirmAction  : popupRequiresAcknowledgement ? 'updatefieldandcontinue' : 'continue',\r\n                  PDP                : PDP,\r\n                  isQuickview        : false\r\n                });\r\n\r\n                LAYOUT.showContent(modalView, {showInModal: true, options: {className: 'modal-confirm-addtocart'}})\r\n              }\r\n            }\r\n          );\r\n\r\n          LAYOUT.registerView('Quickview.AddToCart.Message', function () {\r\n            var pdp                          = PDP.getItemInfo();\r\n            var popupMessage                 = pdp.item.custitem_trevera_popup_message;\r\n            var hasPopupMessage              = popupMessage.length > 0;\r\n            var popupRequiresAcknowledgement = hasPopupMessage ? pdp.item.custitem_trevera_requires_confirmation : false;\r\n            return new AddToCartMessageView({\r\n              application        : container,\r\n              message            : popupMessage,\r\n              requireConfirmation: popupRequiresAcknowledgement,\r\n              dataConfirmAction  : popupRequiresAcknowledgement ? 'updatefieldandcontinue' : 'continue',\r\n              PDP                : PDP,\r\n              isQuickview        : true\r\n            });\r\n          });\r\n\r\n          // add listener for confirmation to QuickView\r\n          PDP.addToViewEventsDefinition(\r\n            PDP.PDP_QUICK_VIEW,\r\n            'click [data-action=\"updatefieldandcontinue\"]',\r\n            function (event) {\r\n              var $acknowledged = jQuery('#in-modal-confirm_message');\r\n              if ($acknowledged.is(\":checked\")) {\r\n                var date       = new Date();\r\n                var dateString = ((date.getMonth() + 1) < 10 ? '0' : '') + (date.getMonth() + 1) + '/' + ((date.getDate()) < 10 ? '0' : '') + date.getDate() + '/' + date.getFullYear();\r\n                jQuery('#custcol_trevera_popup_acknowledged').val(dateString).trigger('blur');\r\n                setTimeout(function () {\r\n                  jQuery('[data-type=\"add-to-cart\"]').trigger('click');\r\n                }, 1000)\r\n\r\n              }\r\n              else {\r\n                LAYOUT.showMessage({\r\n                  message : 'Please Confirm that you understand this message by checking the checkbox.',\r\n                  type    : 'error',\r\n                  selector: 'ConfirmMessageError'\r\n                });\r\n              }\r\n            }\r\n          )\r\n\r\n          //TODO: update this for default images handling\r\n          LAYOUT.addToViewContextDefinition(\r\n            'ItemRelations.RelatedItem.View'\r\n            , 'thumbnail'\r\n            , 'array'\r\n            , function thumbnail(context) {\r\n              // console.log('context', context);\r\n              var images = context.model.itemimages_detail;\r\n              return !!images && images.alt && _.size(images.alt.urls) > 0 ? images.alt.urls[0] : context.thumbnail;\r\n            }\r\n          );\r\n\r\n          window.onpopstate = function (event) {\r\n            //console.log(\"location: \" + document.location + \", state: \" + JSON.stringify(event.state));\r\n            jQuery('.layout-container').removeClass('sc-pushing');\r\n            jQuery('#content').removeAttr('data-pushing');\r\n            jQuery('.sc-pushing-reopened').removeClass('sc-pushing-reopened');\r\n          };\r\n\r\n          PDP.removeChildView(PDP.PDP_FULL_VIEW, 'Product.Information', 'Product.Information');\r\n\r\n          PDP.addChildView( // use addChildView to replace the content\r\n            'Product.Information'\r\n            , function () {\r\n              return new ProductDetailsInformationView({\r\n                application: container,\r\n                PDP        : PDP\r\n              })\r\n            }\r\n          );\r\n\r\n          PDP.on('afterShowContent', function () {\r\n            var pdp          = PDP.getItemInfo();\r\n            var hideFromAnon = pdp.item.custitem_hf_hide_from_anon;\r\n            PROFILE.getUserProfile().then(function (profile) {\r\n              if (!profile.isloggedin && hideFromAnon) {\r\n                Backbone.history.navigate('/', {trigger: true});\r\n              }\r\n            })\r\n          });\r\n        }\r\n      }\r\n    }\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\JavaScript\\Trevera.ProductDetails.Slider.Extension.js","type":"application/javascript","contents":"/*\r\n\t© 2021 Trevera\r\n*/\r\n\r\n// @module ProductDetails\r\ndefine('Trevera.ProductDetails.Slider.Extension'\r\n  , [\r\n    'product_details_image_gallery_video_support.tpl'\r\n\r\n    , 'Backbone'\r\n    , 'Backbone.CompositeView'\r\n    , 'underscore'\r\n    , 'jQuery'\r\n    , 'Utils'\r\n  ]\r\n  , function (\r\n    product_details_image_gallery_video_tpl\r\n    , Backbone\r\n    , BackboneCompositeView\r\n    , _\r\n    , jQuery\r\n    , Utils\r\n  ) {\r\n    'use strict';\r\n\r\n    var altImageKey = 'alt';\r\n\r\n    function filterImages(item_options, selected_options_map, item_images_detail, image_option_filters) {\r\n      const self           = this;\r\n      var images_container = item_images_detail;\r\n      var selected_option_filter;\r\n\r\n      _.each(image_option_filters, function (image_filter) {\r\n        selected_option_filter = _.findWhere(item_options, {cartOptionId: image_filter});\r\n        var options_map        = !!selected_option_filter ? selected_options_map[selected_option_filter.itemOptionId] : [];\r\n        // if the option/dimension has a value set\r\n        if (\r\n          selected_option_filter && selected_option_filter.value && selected_option_filter.value.label\r\n        ) {\r\n          const label = selected_option_filter.value.label.replace(/\\//g, '~').toLowerCase();\r\n          _.each(images_container, function (value, key) {\r\n            if (key.toLowerCase() === label) {\r\n              images_container = value;\r\n            }\r\n          });\r\n        }\r\n        else if (options_map && options_map.length == 1) {\r\n          const label = options_map[0].replace(/\\//g, '~').toLowerCase(); // slashes are replaced with tildes\r\n          _.each(images_container, function (value, key) {\r\n            if (key.toLowerCase() === label) {\r\n              images_container = value;\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      return images_container;\r\n    }\r\n\r\n    function getSelectedOptions(item_options, matrixChilds) {\r\n      var item_map = {};\r\n      _.each(item_options, function (option_filter) {\r\n        if (option_filter.itemOptionId.length > 0) {\r\n          if (!item_map[option_filter.itemOptionId]) item_map[option_filter.itemOptionId] = [];\r\n          _.each(matrixChilds, function (child) {\r\n            var optValue = child[option_filter.itemOptionId];\r\n            if (item_map[option_filter.itemOptionId].indexOf(optValue) < 0) item_map[option_filter.itemOptionId].push(child[option_filter.itemOptionId]);\r\n          })\r\n        }\r\n      });\r\n\r\n      console.log(item_map);\r\n      return item_map;\r\n    }\r\n\r\n    function resizeImage(url, size, ENVIRONMENT) {\r\n      url  = url || Utils.getThemeAbsoluteUrlOfNonManagedResources('img/no_image_available.jpeg', ENVIRONMENT.getConfig('imageNotAvailable'));\r\n      size = ENVIRONMENT.getConfig('imageSizeMapping.' + size) || size;\r\n\r\n      var resize = _.first(\r\n        _.where(ENVIRONMENT.getConfig('siteSettings.imagesizes', []), {name: size})\r\n      );\r\n\r\n      if (resize) {\r\n        return url + (~url.indexOf('?') ? '&' : '?') + resize.urlsuffix;\r\n      }\r\n\r\n      return url;\r\n    }\r\n\r\n    return Backbone.View.extend({\r\n      template: product_details_image_gallery_video_tpl,\r\n\r\n      contextDataRequest: ['item'],\r\n\r\n      initialize: function (options) {\r\n        this.application = options.application;\r\n        this.ENVIRONMENT = this.application.getComponent('Environment');\r\n        this.PDP         = options.PDP;\r\n        this.fallBack    = _.getAbsoluteUrl(this.ENVIRONMENT.getConfig('videoThumbFallback', '/img/video.png'), 'tiny');\r\n        BackboneCompositeView.add(this);\r\n\r\n        this.isZoomEnabled = SC.CONFIGURATION.isZoomEnabled;\r\n        this.application.getLayout().on('afterAppendView', this.initSliderZoom, this);\r\n\r\n        var self = this;\r\n        this.PDP.on('afterOptionSelection', function (data) {\r\n          self.render();\r\n          self.initSliderZoom();\r\n        })\r\n      },\r\n\r\n      initSliderZoom: function initSliderZoom(forceInit) {\r\n        if (this.isZoomEnabled) {\r\n          this.initZoom();\r\n        }\r\n        this.initSlider(forceInit);\r\n      },\r\n\r\n      initZoom: function () {\r\n        var self = this;\r\n        if (!SC.ENVIRONMENT.isTouchEnabled) {\r\n          var {images} = this;\r\n          this.$('[data-zoom]:not(.bx-clone)').each(function (slide_index) {\r\n            self.$(this).zoom(resizeImage(images[slide_index].url, 'zoom', self.ENVIRONMENT), slide_index);\r\n          });\r\n        }\r\n      },\r\n\r\n      // @method buildSliderPager @param {Number}slide_index\r\n      buildSliderPager: function (slide_index) {\r\n        var image = this.images && this.images[slide_index];\r\n\r\n        if (image && image.isVideo) {\r\n          return \"<img src='\" + this.fallBack + \"' alt='play video' class='bx-video-fallback' />\"\r\n        }\r\n        else {\r\n          return '<img src=\"' + resizeImage(image.url, 'tiny', this.ENVIRONMENT) + '\" alt=\"' + image.altimagetext + '\">';\r\n        }\r\n      }\r\n\r\n      // Override to turnoff adaptive height\r\n      // @method initSlider Initialize the bxSlider\r\n      // @return {Void}\r\n      , initSlider: function initSlider() {\r\n        var self = this;\r\n\r\n        if (self.images.length > 1) {\r\n          this.$slider = Utils.initBxSlider(self.$('[data-slider]'), {\r\n            /*buildPager: _.bind(self.buildSliderPager, self)\r\n            ,\t*/startSlide: 0\r\n            , adaptiveHeight           : false\r\n            , touchEnabled             : true\r\n            , nextText                 : '<a class=\"product-details-image-gallery-next-icon\" data-action=\"next-image\"></a>'\r\n            , prevText                 : '<a class=\"product-details-image-gallery-prev-icon\" data-action=\"prev-image\"></a>'\r\n            , controls                 : true\r\n            , pager                    : false\r\n            , hideControlOnEnd         : true\r\n            , infiniteLoop             : false\r\n            , responsive               : true\r\n\r\n            , onSlideBefore: function ($slideElement, oldIndex, newIndex) {\r\n              self.changeThumbnail(self.getPagerSliderSlide());\r\n            }\r\n            , onSlideAfter : function ($slideElement, oldIndex, newIndex) {\r\n              //console.log('onSlideAfter - slider', oldIndex, 'newIndex', newIndex, self.getPagerSliderSlide());\r\n            }\r\n          });\r\n\r\n\r\n          this.$pagerSlider = Utils.initBxSlider(self.$('.product-details-image-gallery-thumbs > ul'), {\r\n            adaptiveHeight    : false\r\n            , touchEnabled    : true\r\n            , nextText        : '<a class=\"product-details-image-gallery-tiles-next-icon\"></a>'\r\n            , prevText        : '<a class=\"product-details-image-gallery-tiles-prev-icon\"></a>'\r\n            , controls        : true\r\n            , pager           : false\r\n            , infiniteLoop    : false\r\n            , hideControlOnEnd: true\r\n            , slideWidth      : 60\r\n            , slideMargin     : 10\r\n            , minSlides       : 7\r\n            , maxSlides       : 7\r\n            , randomStart     : false\r\n\r\n            , onSlideBefore: function ($slideElement, oldIndex, newIndex) {\r\n              //console.log('onSlideBefore - pager', oldIndex, 'newIndex', newIndex, self.$pagerSlider.getCurrentSlide());\r\n            }\r\n\r\n            , onSlideAfter: function ($slideElement, oldIndex, newIndex) {\r\n              //console.log('onSlideAfter - pager', oldIndex, 'newIndex', newIndex, self.$pagerSlider.getCurrentSlide());\r\n            }\r\n          });\r\n\r\n          self.linkSliders();\r\n\r\n          if (SC.ENVIRONMENT.jsEnvironment === 'browser') {\r\n            setTimeout(function () {\r\n              self.$pagerSlider && self.$pagerSlider.goToSlide && self.$pagerSlider.goToSlide(0);\r\n            }, 1000)\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      , linkSliders: function linkSliders() {\r\n        var self = this;\r\n\r\n        self.$pagerSlider.find('li[data-slideIndex=\"0\"]').addClass('active');\r\n        self.$pagerSlider && self.$pagerSlider.goToSlide && self.$pagerSlider.goToSlide(0);\r\n\r\n        self.$pagerSlider.on(\"click\", \"li\", function (event) {\r\n          event.preventDefault();\r\n\r\n          var newIndex = jQuery(this).data(\"slideindex\");\r\n          //console.log('slider go to slide', newIndex)\r\n          self.$pagerSlider && self.$pagerSlider.goToSlide && self.$slider.goToSlide(parseInt(newIndex));\r\n        });\r\n\r\n        //console.log('linkSliders', this.$pagerSlider.getCurrentSlide(), this.$slider.getCurrentSlide(), self.getPagerSliderSlide())\r\n\r\n      }\r\n\r\n      , getPagerSliderSlide: function () {\r\n        var calculatedIndex = Math.round(this.$slider.getCurrentSlide() / this.$pagerSlider.getSlideCount());\r\n\r\n        console.log(calculatedIndex, this.$slider.getCurrentSlide(), this.$pagerSlider.getSlideCount());\r\n\r\n        if (_.isNaN(calculatedIndex) || calculatedIndex === Infinity || calculatedIndex < 0) return 0;\r\n\r\n        if (calculatedIndex > this.$pagerSlider.getSlideCount()) calculatedIndex = this.$pagerSlider.getSlideCount() - 1;\r\n\r\n        return calculatedIndex;\r\n      }\r\n\r\n      , destroy: function destroy() {\r\n        this.application.getLayout().off('afterAppendView', this.initSliderZoom, this);\r\n        this._destroy();\r\n      }\r\n\r\n      , slideCount: 7\r\n\r\n      , changeThumbnail: function () {\r\n        this.$pagerSlider && this.$pagerSlider.goToSlide && this.$pagerSlider.goToSlide(this.getPagerSliderSlide());\r\n        this.$pagerSlider.find('.active').removeClass(\"active\");\r\n        this.$pagerSlider.find('li[data-slideIndex=\"' + this.$slider.getCurrentSlide() + '\"]').addClass(\"active\");\r\n\r\n        //if(this.$slider.getSlideCount()-this.$slider.getCurrentSlide() >= this.slideCount) this.$slider.goToSlide(this.$slider.getCurrentSlide());\r\n        //else this.$slider.goToSlide(this.$slider.getSlideCount() - this.slideCount);\r\n        //console.log('pager current slide', this.$pagerSlider.getCurrentSlide(), this.$pagerSlider.getPagerQty());\r\n\r\n      }\r\n\r\n      , hasNewBadge: function getBadges() {\r\n        var thisItem             = this.contextData.item();\r\n        var ENVIRONMENT          = this.application.getComponent('Environment');\r\n        var badgesField          = ENVIRONMENT.getConfig('sc.badgesItemFieldID') || 'custitem_product_badges';\r\n        var productBadgesEnabled = ENVIRONMENT.getConfig('sc.badgesEnabled') || false;\r\n        var itemBadges           = thisItem[badgesField] || '';\r\n        var badgesArr            = _.without(itemBadges.split(/,/g), '&nbsp;', '', ' ');\r\n        var hasNew               = _.find(badgesArr, function (badge) {\r\n          return badge.trim() === \"New Product\"\r\n        });\r\n\r\n        return productBadgesEnabled && _.size(hasNew) > 0\r\n      }\r\n\r\n      , getContext: function () {\r\n        var thisItem       = this.contextData.item();\r\n        var options        = _.find(thisItem.options, {isMatrixDimension: true});\r\n        var colorOptions   = _.filter(thisItem.options, function (opt) {\r\n          return opt.hasOwnProperty('colors')\r\n        });\r\n        var image_filters  = this.ENVIRONMENT.getConfig('productline.multiImageOption', []);\r\n        //console.log('selectedOptions', options, 'colorOptions', colorOptions, thisItem);\r\n        var images         = thisItem.itemimages_detail;\r\n        var matrixChild    = this.PDP.getAllMatrixChilds();\r\n        var selectedChilds = this.PDP.getSelectedMatrixChilds();\r\n        var optionMap      = getSelectedOptions(thisItem.options, selectedChilds);\r\n        images             = filterImages(thisItem.options, optionMap, images, image_filters);\r\n        var altImages      = thisItem.itemimages_detail[altImageKey];\r\n        if (images && images.urls && altImages && altImages.urls && !images[altImageKey]) {\r\n          images.urls = images.urls.concat(altImages.urls);\r\n        }\r\n        this.images = images;\r\n\r\n\r\n        if (!!images) {\r\n          this.images = Utils.imageFlatten(images);\r\n        }\r\n        else {\r\n          this.images = [{url: Utils.getThemeAbsoluteUrlOfNonManagedResources('img/no_image_available.jpeg', ENVIRONMENT.getConfig('imageNotAvailable'))}];\r\n        }\r\n\r\n        var returnVariable = {\r\n          // @property {String} imageResizeId\r\n          imageResizeId  : Utils.getViewportWidth() < 768 ? 'thumbnail' : 'main',\r\n          // @property {Array<ImageContainer>} images\r\n          images         : this.images || [],\r\n          // @property {ImageContainer} firstImage\r\n          firstImage     : images.urls && images.urls[0] || {},\r\n          // @property {Boolean} showImages\r\n          showImages     : this.images.length > 0,\r\n          // @property {Boolean} showImageSlider\r\n          showImageSlider: this.images.length > 1\r\n        };\r\n\r\n        var imageResizeId = this.options.inModal ? 'quickview' : 'main';\r\n        if (Utils.getViewportWidth() < 540) {\r\n          imageResizeId = 'searchmobile'\r\n        }\r\n        if (Utils.getViewportWidth() < 480) {\r\n          imageResizeId = 'quickview'\r\n        }\r\n\r\n        // extend it with new variables\r\n        _.extend(returnVariable, {\r\n          showNewProductBadge: this.hasNewBadge()\r\n          , imageResizeId    : imageResizeId\r\n          , fallBack         : this.fallBack\r\n        });\r\n\r\n        return returnVariable;\r\n      }\r\n    });\r\n\r\n\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\JavaScript\\Trevera.Products.Extension.js","type":"application/javascript","contents":"/*\r\n © 2020 Trevera\r\n\r\n Product Customizations that should load in Checkout and MyAccount.\r\n This class is just a module loader\r\n\r\n */\r\ndefine('Trevera.Products.Extension'\r\n  , [\r\n    'Trevera.ExcludeFromSearch'\r\n    , 'Backbone'\r\n    , 'underscore'\r\n    , 'Utils'\r\n  ]\r\n  , function (\r\n    ExcludeFromSearch\r\n    , Backbone\r\n    , _\r\n    , Utils\r\n  ) {\r\n    'use strict';\r\n\r\n\r\n    return {\r\n      mountToApp: function mountToApp(container) {\r\n        var LAYOUT      = container.getComponent('Layout');\r\n        var PROFILE     = container.getComponent('UserProfile');\r\n        var CHECKOUT    = container.getComponent('Checkout');\r\n        var CART        = container.getComponent('Cart');\r\n        var ENVIRONMENT = container.getComponent('Environment');\r\n\r\n\r\n        var profile;\r\n        PROFILE.getUserProfile().then(function (data) {\r\n          profile = data;\r\n          LAYOUT.cancelableTrigger('profileComponent:DataLoaded');\r\n        });\r\n\r\n        ExcludeFromSearch.mountToApp(container);\r\n\r\n        if (LAYOUT) {\r\n          /** Show compare price based on the price level assigned to the customer */\r\n          LAYOUT.addToViewContextDefinition(\r\n            'Transaction.Line.Views.Price.View'\r\n            , 'trvExtras'\r\n            , 'object'\r\n            , function trvExtras(context) {\r\n              var onlineprice = context.model.item.onlinecustomerprice;\r\n              var pricelevel  = profile && Number(profile.pricelevel) || 1;\r\n              var tooltip     = ENVIRONMENT.getConfig('trevera.strikethroughPricingTooltip', '');\r\n              var comparePrice, price;\r\n              switch (pricelevel) {\r\n                case 26: // Silver Circle\r\n                  comparePrice = context.model.item.pricelevel1; // 03. Silver Circle\r\n                  price        = context.model.item.pricelevel26;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: context.model.item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                case 27: // White Star\r\n                  comparePrice = context.model.item.pricelevel1; //04. White Star\r\n                  price        = context.model.item.pricelevel27;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: context.model.item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                case 25: // Black Diamond\r\n                  comparePrice = context.model.item.pricelevel1; // 05. Black Diamond\r\n                  price        = context.model.item.pricelevel25;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: context.model.item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                default:\r\n                  return {\r\n                    showComparePrice     : context.showComparePrice,\r\n                    comparePriceFormatted: context.comparePriceFormatted,\r\n                    showTooltip          : false\r\n                  }\r\n                  break;\r\n              }\r\n            }\r\n          );\r\n        }\r\n\r\n\r\n      }\r\n    };\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\JavaScript\\Trevera.Products.Shopping.Extension.js","type":"application/javascript","contents":"/*\r\n © 2020 Trevera\r\n\r\n Product Customizations that should load in Shopping.\r\n This class is just a module loader\r\n\r\n */\r\n\r\ndefine('Trevera.Products.Shopping.Extension'\r\n  , [\r\n    'Trevera.ProductDetails'\r\n    , 'Trevera.PLP.Extension'\r\n    , 'Trevera.ExcludeFromSearch'\r\n    , 'Backbone'\r\n    , 'underscore'\r\n    , 'Utils'\r\n  ]\r\n  , function (\r\n    TreveraProductDetails\r\n    , TreveraPLPExtension\r\n    , ExcludeFromSearch\r\n    , Backbone\r\n    , _\r\n    , Utils\r\n  ) {\r\n    'use strict';\r\n\r\n    return {\r\n      mountToApp: function mountToApp(container) {\r\n        var LAYOUT      = container.getComponent('Layout');\r\n        var PROFILE     = container.getComponent('UserProfile');\r\n        var ENVIRONMENT = container.getComponent('Environment');\r\n\r\n        var profile;\r\n        PROFILE.getUserProfile().then(function (data) {\r\n          profile = data;\r\n          LAYOUT.cancelableTrigger('profileComponent:DataLoaded');\r\n        });\r\n        if (LAYOUT) {\r\n          /** Show compare price based on the price level assigned to the customer */\r\n          LAYOUT.addToViewContextDefinition(\r\n            'ProductViews.Price.View'\r\n            , 'trvExtras'\r\n            , 'object'\r\n            , function trvExtras(context) {\r\n              var item = context.model;\r\n              if (context.model.item) item = context.model.item;\r\n              var pricelevel = profile && Number(profile.pricelevel) || 1;\r\n              var tooltip    = ENVIRONMENT.getConfig('trevera.strikethroughPricingTooltip', '');\r\n              var comparePrice, price;\r\n              switch (pricelevel) {\r\n                case 26: // Silver Circle\r\n                  comparePrice = item.pricelevel1; // 03. Silver Circle\r\n                  price        = item.pricelevel26;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                case 27: // White Star\r\n                  comparePrice = item.pricelevel1; //04. White Star\r\n                  price        = item.pricelevel27;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                case 25: // Black Diamond\r\n                  comparePrice = item.pricelevel1; // 05. Black Diamond\r\n                  price        = item.pricelevel25;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                default:\r\n                  return {\r\n                    showComparePrice     : context.showComparePrice,\r\n                    comparePriceFormatted: context.comparePriceFormatted,\r\n                    showTooltip          : false\r\n                  }\r\n                  break;\r\n              }\r\n            }\r\n          );\r\n          /** Show compare price based on the price level assigned to the customer */\r\n          LAYOUT.addToViewContextDefinition(\r\n            'Transaction.Line.Views.Price.View'\r\n            , 'trvExtras'\r\n            , 'object'\r\n            , function trvExtras(context) {\r\n              var pricelevel = profile && Number(profile.pricelevel) || 1;\r\n              var tooltip    = ENVIRONMENT.getConfig('trevera.strikethroughPricingTooltip', '');\r\n              var comparePrice, price;\r\n              switch (pricelevel) {\r\n                case 26: // Silver Circle\r\n                  comparePrice = context.model.item.pricelevel1;\r\n                  price        = context.model.item.pricelevel26;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: context.model.item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                case 27: // White Star\r\n                  comparePrice = context.model.item.pricelevel1;\r\n                  price        = context.model.item.pricelevel27;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: context.model.item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                case 25: // Black Diamond\r\n                  comparePrice = context.model.item.pricelevel1;\r\n                  price        = context.model.item.pricelevel25;\r\n                  return {\r\n                    showComparePrice     : price < comparePrice,\r\n                    comparePriceFormatted: context.model.item.pricelevel1_formatted,\r\n                    showTooltip          : tooltip && tooltip.length > 0,\r\n                    tooltip              : tooltip\r\n                  }\r\n                  break;\r\n                default:\r\n                  return {\r\n                    showComparePrice     : context.showComparePrice,\r\n                    comparePriceFormatted: context.comparePriceFormatted,\r\n                    showTooltip          : false\r\n                  }\r\n                  break;\r\n              }\r\n            }\r\n          );\r\n        }\r\n        TreveraProductDetails.mountToApp(container);\r\n        TreveraPLPExtension.mountToApp(container);\r\n        ExcludeFromSearch.mountToApp(container);\r\n      }\r\n    };\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\Sass\\_products-extension.scss","type":"text/x-scss","contents":".product-details-image-gallery-tiles-next-icon {\r\n\r\n}\r\n\r\n.product-details-image-gallery-tiles-prev-icon {\r\n\r\n}\r\n\r\n.add-to-cart-confirm-message-buttons {\r\n    margin-top: $sc-margin-lv4;\r\n    overflow: hidden;\r\n\r\n    .button-primary {\r\n        float: right;\r\n        widht: 100%;\r\n    }\r\n}\r\n\r\n.add-to-cart-confirm-message {\r\n    label {\r\n        display: block;\r\n        text-align: right;\r\n    }\r\n}\r\n\r\n.requires-popup-message {\r\n    [data-view=\"MainActionView\"] {\r\n        display: none;\r\n    }\r\n}\r\n\r\n.cart-add-to-cart-button-custom-button {\r\n    @extend .cart-add-to-cart-button-button;\r\n}\r\n\r\n// hide control\r\n.option-custcol_trevera_popup_acknowledged,\r\n[data-cart-option-id=\"custcol_trevera_popup_acknowledged\"] {\r\n    display: none !important;\r\n}\r\n\r\n.price-details-info-icon {\r\n    @extend .sc-tooltip;\r\n}\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\Templates\\add_to_cart_confirm_message.tpl","type":"application/vnd.groove-tool-template","contents":"<div class=\"add-to-cart-confirm-message\">\r\n    <div class=\"add-to-cart-confirm-message-message\">\r\n        {{{message}}}\r\n    </div>\r\n    {{#if requireConfirmation}}\r\n        <div data-view=\"ConfirmMessageError\"></div>\r\n        <label>{{translate 'I acknowledge I have recieved this message.'}}\r\n            <input type=\"checkbox\" id=\"confirm_message\" name=\"confirm_message\" required/>\r\n        </label>\r\n    {{/if}}\r\n    {{#if inModal}}\r\n        <div class=\"add-to-cart-confirm-message-buttons\">\r\n            <button data-action=\"{{dataConfirmAction}}\" class=\"button-primary button-medium\">Add to Cart</button>\r\n            <button data-dismiss=\"modal\" class=\"button-secondary button-medium\">Cancel</button>\r\n        </div>\r\n    {{/if}}\r\n</div>\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\Extension\\Templates\\product_details_image_gallery_video_support.tpl","type":"application/vnd.groove-tool-template","contents":"{{!\r\n    © 2021 Trevera.\r\n    User may not copy, modify, distribute, or re-bundle or otherwise make available this code;\r\n}}\r\n\r\n<div class=\"product-details-image-gallery {{#if showNewProductBadge}}corner-badge-new{{/if}}\">\r\n    {{#if showImages}}\r\n        {{#if showImageSlider}}\r\n            <ul class=\"bxslider\" data-slider data-image-id=\"{{imageResizeId}}\">\r\n                {{#each images}}\r\n                    {{#if isVideo}}\r\n                        <li class=\"product-details-image-gallery-video\">\r\n                            {{! This might have to be changed based on format of data}}\r\n                            {{{this.video}}}\r\n                        </li>\r\n                    {{else}}\r\n                        <li data-zoom class=\"product-details-image-gallery-container\">\r\n                            <img\r\n                                    src=\"{{resizeImage url ../imageResizeId}}\"\r\n                                    alt=\"{{altimagetext}}\"\r\n                                    itemprop=\"image\"\r\n                                    data-loader=\"false\">\r\n                        </li>\r\n                    {{/if}}\r\n\r\n                {{/each}}\r\n            </ul>\r\n        {{else}}\r\n            {{#with firstImage}}\r\n                {{#if isVideo}}\r\n                    <li class=\"product-details-image-gallery-video\">\r\n                        {{! This might have to be changed based on format of data}}\r\n                        {{{this}}}\r\n                    </li>\r\n                {{else}}\r\n                    <div class=\"product-details-image-gallery-detailed-image\" data-zoom>\r\n                        <img\r\n                                class=\"center-block\"\r\n                                src=\"{{resizeImage url ../imageResizeId}}\"\r\n                                alt=\"{{altimagetext}}\"\r\n                                itemprop=\"image\"\r\n                                data-loader=\"false\">\r\n                    </div>\r\n                {{/if}}\r\n            {{/with}}\r\n        {{/if}}\r\n    {{/if}}\r\n    <div data-view=\"SocialSharing.Flyout.Hover\"></div>\r\n</div>\r\n\r\n<div class=\"product-details-image-gallery-thumbs\">\r\n    {{#if showImages}}\r\n        {{#if showImageSlider}}\r\n            <ol class=\"\">\r\n                {{#each images}}\r\n                    {{#if @first}}\r\n                        <li class=\"product-details-dummy-image\">\r\n                            <img\r\n                                    src=\"{{resizeImage url 'tiny'}}\"\r\n                                    alt=\"{{altimagetext}}\"\r\n                                    itemprop=\"image\"\r\n                                    data-loader=\"false\"\r\n                                    onclick=\"jQuery('.image-gallery-first-image').click();\">\r\n                        </li>\r\n                    {{/if}}\r\n                {{/each}}\r\n            </ol>\r\n            <ul class=\"pager\">\r\n                {{#each images}}\r\n                    {{#if isVideo}}\r\n                        <li class=\"product-details-image-gallery-video-thumb\" data-slideindex=\"{{@index}}\">\r\n                            {{! This might have to be changed based on format of data}}\r\n                            <img src='{{resizeImage ../fallBack 'tiny'}}' alt='play video' class='bx-video-fallback' />\r\n                        </li>\r\n                    {{else}}\r\n                        {{#if @first}}\r\n                            <li class=\"product-details-image-gallery-container-thumb image-gallery-first-image\" data-slideindex=\"{{@index}}\">\r\n                                <img\r\n                                        src=\"{{resizeImage url 'tiny'}}\"\r\n                                        alt=\"{{altimagetext}}\"\r\n                                        itemprop=\"image\"\r\n                                        data-loader=\"false\">\r\n                            </li>\r\n                            {{else}}\r\n                            <li class=\"product-details-image-gallery-container-thumb\" data-slideindex=\"{{@index}}\">\r\n                                <img\r\n                                        src=\"{{resizeImage url 'tiny'}}\"\r\n                                        alt=\"{{altimagetext}}\"\r\n                                        itemprop=\"image\"\r\n                                        data-loader=\"false\">\r\n                            </li>\r\n                        {{/if}}\r\n                    {{/if}}\r\n\r\n                {{/each}}\r\n            </ul>\r\n        {{/if}}\r\n\r\n    {{/if}}\r\n</div>\r\n\r\n\r\n\r\n{{!----\r\nUse the following context variables when customizing this template:\r\n\r\n    imageResizeId (String)\r\n    images (Array)\r\n    firstImage (Object)\r\n    firstImage.altimagetext (String)\r\n    firstImage.url (String)\r\n    showImages (Boolean)\r\n    showImageSlider (Boolean)\r\n----}}\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\ProductDetailsAttributes\\Configuration\\ProductDetails.Attributes.json","type":"application/json","contents":"{\r\n    \"type\": \"object\",\r\n    \"subtab\": {\r\n        \"id\": \"treveraProductAttributes\",\r\n        \"title\": \"Product Attributes\",\r\n        \"description\": \"Product Detail Page\",\r\n        \"group\": \"trevera_global_group\"\r\n    },\r\n    \"properties\": {\r\n        \"trevera.productDetailsAttributes.enabled\": {\r\n            \"group\": \"trevera_global_group\",\r\n            \"subtab\": \"treveraProductAttributes\",\r\n            \"type\": \"boolean\",\r\n            \"title\": \"Product Attributes Enabled\",\r\n            \"description\": \"Turn on Customization\",\r\n            \"default\": false\r\n        },\r\n        \"trevera.productDetailsAttributes.showOnPDP\": {\r\n            \"group\": \"trevera_global_group\",\r\n            \"subtab\": \"treveraProductAttributes\",\r\n            \"type\": \"boolean\",\r\n            \"title\": \"Show Product Attributes on PDP\",\r\n            \"description\": \"Show Product Attributes on PDP\",\r\n            \"default\": false\r\n        },\r\n        \"trevera.productDetailsAttributes.showOnQuickView\": {\r\n            \"group\": \"trevera_global_group\",\r\n            \"subtab\": \"treveraProductAttributes\",\r\n            \"type\": \"boolean\",\r\n            \"title\": \"Show Product Attributes on Quick View\",\r\n            \"description\": \"Show Product Attributes on Quick View\",\r\n            \"default\": false\r\n        },\r\n        \"trevera.productDetailsAttributes.attributes\": {\r\n            \"group\": \"trevera_global_group\",\r\n            \"subtab\": \"treveraProductAttributes\",\r\n            \"type\": \"array\",\r\n            \"title\": \"Product Details Attributes\",\r\n            \"description\": \"Details fields to be displayed on a stacked list on the PDP. Multiple item fields can be shown in sections.\",\r\n            \"items\": {\r\n                \"type\": \"object\",\r\n                \"properties\": {\r\n                    \"name\": {\r\n                        \"type\": \"string\",\r\n                        \"title\": \"Name\",\r\n                        \"description\": \"Label to use in the UI to reference this detail option.\",\r\n                        \"translate\": true,\r\n                        \"mandatory\": true\r\n                    },\r\n                    \"contentFromKey\": {\r\n                        \"type\": \"string\",\r\n                        \"title\": \"id\",\r\n                        \"description\": \"Item record's field to show its value in this item detail section\",\r\n                        \"mandatory\": true\r\n                    },\r\n                    \"contentArea\": {\r\n                        \"type\": \"string\",\r\n                        \"title\": \"content area\",\r\n                        \"description\": \"area of page to load content. allows for grouping of different properties\"\r\n                    },\r\n                    \"itemprop\": {\r\n                        \"type\": \"string\",\r\n                        \"title\": \"itemprop\",\r\n                        \"description\": \"Optional. The name of the 'itemprop' schema.org HTML attribute. \"\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\ProductDetailsAttributes\\JavaScript\\HITC.ProductDetailsAttributes.Extension.js","type":"application/javascript","contents":"/*\r\n* In order for views to render, <div data-view=\"Product.Attributes\"></div> must be added to templates\r\n*\r\n*/\r\ndefine(\r\n  'Trevera.ProductDetailsAttributes.Extension'\r\n  , [\r\n    'ProductDetailsAttributes.View'\r\n  ]\r\n  , function (\r\n    ExtensionView\r\n  ) {\r\n    'use strict';\r\n\r\n    return {\r\n      mountToApp: function mountToApp(container) {\r\n        var PDP          = container.getComponent('PDP');\r\n        var ENVIRONMENT  = container.getComponent('Environment')\r\n          , moduleConfig = ENVIRONMENT.getConfig('trevera.productDetailsAttributes') || {};\r\n\r\n        if (PDP && moduleConfig.enabled) {\r\n          if (moduleConfig.showOnPDP) {\r\n            PDP.addChildViews(\r\n              PDP.PDP_FULL_VIEW\r\n              , {\r\n                'Product.Attributes': {\r\n                  'Product.Attributes':\r\n                    {\r\n                      childViewIndex        : 5\r\n                      , childViewConstructor: function () {\r\n\r\n                        return new ExtensionView({\r\n                          application: container,\r\n                          PDP        : PDP,\r\n                          contentKey : '',\r\n                          showLabels : true\r\n                        })\r\n                      }\r\n                    }\r\n                }\r\n              }\r\n            );\r\n\r\n            PDP.addChildViews(\r\n              PDP.PDP_FULL_VIEW\r\n              , {\r\n                'Product.Attributes.Features': {\r\n                  'Product.Attributes.Features':\r\n                    {\r\n                      childViewIndex        : 5\r\n                      , childViewConstructor: function () {\r\n\r\n                        return new ExtensionView({\r\n                          application: container,\r\n                          PDP        : PDP,\r\n                          contentKey : 'features',\r\n                          showLabels : false\r\n                        })\r\n                      }\r\n                    }\r\n                }\r\n              }\r\n            );\r\n          }\r\n\r\n          if (moduleConfig.showOnQuickView) {\r\n            PDP.addChildViews(\r\n              PDP.PDP_QUICK_VIEW\r\n              , {\r\n                'Product.Attributes': {\r\n                  'Product.Attributes':\r\n                    {\r\n                      childViewIndex        : 5\r\n                      , childViewConstructor: function () {\r\n                        return new ExtensionView({\r\n                          application: container,\r\n                          PDP        : PDP\r\n                        })\r\n                      }\r\n                    }\r\n                }\r\n              }\r\n            );\r\n          }\r\n        }\r\n      }\r\n    };\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\ProductDetailsAttributes\\JavaScript\\ProductDetailsAttributes.View.js","type":"application/javascript","contents":"// @module Trevera.ProductDetailsAttributes.Extension\r\ndefine('ProductDetailsAttributes.View'\r\n  , [\r\n    'trv_productdetailsattributes_extension.tpl'\r\n    , 'Utils'\r\n    , 'Backbone'\r\n    , 'jQuery'\r\n    , 'underscore'\r\n  ]\r\n  , function (\r\n    productdetailsattributes_extension_tpl\r\n    , Utils\r\n    , Backbone\r\n    , jQuery\r\n    , _\r\n  ) {\r\n    'use strict';\r\n\r\n    // @class Trevera.ProductDetailsAttributes.Extension.View @extends Backbone.View\r\n    return Backbone.View.extend({\r\n\r\n      template: productdetailsattributes_extension_tpl\r\n\r\n      , events: {}\r\n\r\n      , contextDataRequest: ['item']\r\n\r\n      , initialize: function initialize(options) {\r\n        Backbone.View.prototype.initialize.apply(this, arguments);\r\n        this.application = options.application;\r\n        this.ENVIRONMENT = this.options.application.getComponent('Environment');\r\n\r\n        this.contentKey = options.contentKey;\r\n        this.showLabels = options.showLabels;\r\n      }\r\n\r\n      , render: function () {\r\n        this.details = this.details || this.computeDetailsArea();\r\n        this._render();\r\n      }\r\n\r\n      , computeDetailsArea: function () {\r\n        var self    = this\r\n          , details = [];\r\n\r\n        var item_model = this.contextData.item();\r\n\r\n        _.each(this.ENVIRONMENT.getConfig('trevera.productDetailsAttributes.attributes', []), function (item_information) {\r\n          var content = '';\r\n\r\n          if (item_information.contentFromKey) {\r\n            content = item_model[item_information.contentFromKey];\r\n          }\r\n\r\n          var isContentArea          = !!item_information.contentArea && item_information.contentArea.length > 0;\r\n          var itemMatchesContentArea = self.contentKey === item_information.contentArea;\r\n\r\n          if (content && Utils.trim(content)) {\r\n            if (itemMatchesContentArea) {\r\n              details.push({\r\n                //@property {String} name\r\n                name      : item_information.name\r\n                //@property {String} content Any string and event valid HTML is allowed\r\n                , content : content\r\n                //@property {String} itemprop\r\n                , itemprop: item_information.itemprop\r\n              });\r\n            }\r\n          }\r\n\r\n\r\n        });\r\n\r\n        return details;\r\n      }\r\n\r\n      , getContext: function () {\r\n        this.computeDetailsArea();\r\n\r\n        return {\r\n          //@property {Boolean} showInformation\r\n          showInformation: this.details.length > 0\r\n          //@property {Boolean} showHeader\r\n          , showHeader   : this.details.length < 2\r\n          //@property {Array<ProductDetails.Information.DataContainer>} details\r\n          , details      : this.details\r\n          , showLabels   : this.showLabels\r\n        };\r\n      }\r\n\r\n    });\r\n  });\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\ProductDetailsAttributes\\Sass\\_productdetailsattributes-extension.scss","type":"text/x-scss","contents":".product-details-attributes-content {\r\n    font-weight: $sc-font-weight-bold\r\n}\r\n\r\n.product-details-full-product-attributes,\r\n.product-details-quickview-product-attributes{\r\n    margin: $sc-margin-lv4 0;\r\n}\r\n"},{"path":"\\Trevera\\Products@1.1.2\\Modules\\ProductDetailsAttributes\\Templates\\trv_productdetailsattributes_extension.tpl","type":"application/vnd.groove-tool-template","contents":"<section class=\"\">\r\n    <ul class=\"product-details-attributes\">\r\n        {{#each details}}\r\n            <li class=\"product-details-attributes-attribute\" itemprop=\"{{itemprop}}\">\r\n                <p>{{#if ../showLabels}}<span  class=\"product-details-attributes-title\">{{name}}:</span> {{/if}}<span class=\"product-details-attributes-content\">{{{content}}}</span></p>\r\n            </li>\r\n        {{/each}}\r\n    </ul>\r\n</section>\r\n\r\n\r\n<!--\r\n  Available helpers:\r\n  {{ getExtensionAssetsPath \"img/image.jpg\"}} - reference assets in your extension\r\n\r\n  {{ getExtensionAssetsPathWithDefault context_var \"img/image.jpg\"}} - use context_var value i.e. configuration variable. If it does not exist, fallback to an asset from the extension assets folder\r\n\r\n  {{ getThemeAssetsPath context_var \"img/image.jpg\"}} - reference assets in the active theme\r\n\r\n  {{ getThemeAssetsPathWithDefault context_var \"img/theme-image.jpg\"}} - use context_var value i.e. configuration variable. If it does not exist, fallback to an asset from the theme assets folder\r\n-->\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\assets\\services\\TermsTracking.Service.ss","type":null,"contents":"function service(request, response) {\r\n  'use strict';\r\n  try {\r\n    require('TreveraTerms.ServiceController').handle(request, response);\r\n  } catch (ex) {\r\n    console.log('TreveraTerms.ServiceController: Error', ex);\r\n    var controller      = require('ServiceController');\r\n    controller.response = response;\r\n    controller.request  = request;\r\n    controller.sendError(ex);\r\n  }\r\n}\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\manifest.json","type":"application/json","contents":"{\n    \"name\": \"TreveraTerms\",\n    \"fantasyName\": \"Agree Terms\",\n    \"vendor\": \"Trevera\",\n    \"type\": \"extension\",\n    \"target\": \"SCA,SCS\",\n    \"target_version\": {\n        \"SCA\": \">=21.1.0\",\n        \"SCS\": \">=21.1.0\"\n    },\n    \"version\": \"1.0.0\",\n    \"description\": \"Track if the customer has agreed to terms\",\n    \"assets\": {\n        \"img\": {\n            \"files\": []\n        },\n        \"fonts\": {\n            \"files\": []\n        },\n        \"services\": {\n            \"files\": [\n                \"services/TermsTracking.Service.ss\"\n            ]\n        }\n    },\n    \"configuration\": {\n        \"files\": [\n            \"Modules/Extension/Configuration/TreveraTerrms.Extension.json\"\n        ]\n    },\n    \"templates\": {\n        \"application\": {\n            \"shopping\": {\n                \"files\": [\n                    \"Modules/Extension/Templates/trevera_terms_modal.tpl\"\n                ]\n            },\n            \"myaccount\": {\n                \"files\": [\n                    \"Modules/Extension/Templates/trevera_terms_modal.tpl\"\n                ]\n            },\n            \"checkout\": {\n                \"files\": [\n                    \"Modules/Extension/Templates/trevera_terms_modal.tpl\"\n                ]\n            }\n        }\n    },\n    \"sass\": {\n        \"entry_points\": {\n            \"shopping\": \"Modules/Extension/Sass/_termstracking-extension.scss\",\n            \"myaccount\": \"Modules/Extension/Sass/_termstracking-extension.scss\",\n            \"checkout\": \"Modules/Extension/Sass/_termstracking-extension.scss\"\n        },\n        \"files\": [\n            \"Modules/Extension/Sass/_termstracking-extension.scss\"\n        ]\n    },\n    \"javascript\": {\n        \"entry_points\": {\n            \"shopping\": \"Modules/Extension/JavaScript/TermsTracking.Extension.js\",\n            \"myaccount\": \"Modules/Extension/JavaScript/TermsTracking.Extension.js\",\n            \"checkout\": \"Modules/Extension/JavaScript/TermsTracking.Extension.js\"\n        },\n        \"application\": {\n            \"shopping\": {\n                \"files\": [\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.js\",\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.SS2Model.js\",\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.View.js\",\n                    \"Modules/Extension/JavaScript/Hydrafacial.ProfileFields.SS2Model.js\"\n                ]\n            },\n            \"myaccount\": {\n                \"files\": [\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.js\",\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.SS2Model.js\",\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.View.js\",\n                    \"Modules/Extension/JavaScript/Hydrafacial.ProfileFields.SS2Model.js\"\n                ]\n            },\n            \"checkout\": {\n                \"files\": [\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.js\",\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.SS2Model.js\",\n                    \"Modules/Extension/JavaScript/TermsTracking.Extension.View.js\",\n                    \"Modules/Extension/JavaScript/Hydrafacial.ProfileFields.SS2Model.js\"\n                ]\n            }\n        }\n    },\n    \"suitescript2\": {\n        \"files\": [\n            \"Modules/Extension/SuiteScript2/TermsTracking.SS2.Service.ss\",\n            \"Modules/Extension/SuiteScript2/TermsTracking.Model.js\"\n        ]\n    }\n}"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\Configuration\\TreveraTerrms.Extension.json","type":"application/json","contents":"{\r\n    \"type\": \"object\",\r\n    \"subtab\": {\r\n        \"id\": \"treveraTerms\",\r\n        \"title\": \"Terms Module\",\r\n        \"description\": \"Terms Module configurations\",\r\n        \"group\": \"trevera_global_group\"\r\n    },\r\n    \"properties\": {\r\n        \"treveraTerms.enabled\": {\r\n            \"group\": \"trevera_global_group\",\r\n            \"subtab\": \"treveraTerms\",\r\n            \"type\": \"boolean\",\r\n            \"title\": \"Enabled\",\r\n            \"description\": \"Module Enabled\"\r\n        },\r\n        \"treveraTerms.entityField\": {\r\n            \"group\": \"trevera_global_group\",\r\n            \"subtab\": \"treveraTerms\",\r\n            \"type\": \"string\",\r\n            \"title\": \"Entity Field Id\",\r\n            \"description\": \"Entity Field Id\"\r\n        },\r\n        \"treveraTerms.termsCMSPage\": {\r\n            \"group\": \"trevera_global_group\",\r\n            \"subtab\": \"treveraTerms\",\r\n            \"type\": \"string\",\r\n            \"nsType\": \"textarea\",\r\n            \"title\": \"Terms CMS Page\",\r\n            \"description\": \"Terms CMS Page\"\r\n        }\r\n    }\r\n}\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\JavaScript\\Hydrafacial.ProfileFields.SS2Model.js","type":"application/javascript","contents":"// @module Hydrafacial.ProfileFields\r\ndefine('Hydrafacial.ProfileFields.SS2Model'\r\n  , [\r\n    'Singleton',\r\n    'Backbone',\r\n    'Utils',\r\n    'underscore'\r\n  ]\r\n  , function (\r\n    Singleton,\r\n    Backbone,\r\n    Utils,\r\n    _\r\n  ) {\r\n    'use strict';\r\n\r\n    var classProperties = _.extend({\r\n      getPromise: function (requestArgs) {\r\n        console.log('getPromise', requestArgs)\r\n        var self = this;\r\n        if (_.result(SC, 'isPageGenerator')) {\r\n          return jQuery.Deferred().resolve();\r\n        }\r\n        var model_instance = this.getInstance();\r\n\r\n        if (model_instance.modelLoad) {\r\n          if (model_instance.isLoading) {\r\n            model_instance.isLoading = false;\r\n          }\r\n        }\r\n        else {\r\n          model_instance.modelLoad = jQuery.Deferred();\r\n          model_instance.fetch({data: requestArgs}).done(function (resp) {\r\n            // set attributes on model and force change event on session\r\n            model_instance.set('profileFields', resp);\r\n            model_instance.trigger('change:profileFields', model_instance, (model_instance.attributes && model_instance.attributes.profileFields) || {});\r\n            model_instance.modelLoad.resolve.apply(this, arguments);\r\n          }).fail(function () {\r\n            model_instance.modelLoad.reject.apply(this, arguments);\r\n          }).always(function () {\r\n            if (model_instance.isLoading) {\r\n              model_instance.isLoading = false;\r\n            }\r\n          });\r\n        }\r\n\r\n        return model_instance.modelLoad;\r\n      }\r\n    }, Singleton);\r\n\r\n    // @class Soberlink.ProfileFields.Model @extends Backbone.Model\r\n    return Backbone.CachedModel.extend({\r\n      //@property {String} urlRoot\r\n      urlRoot: Utils.getAbsoluteUrl(getExtensionAssetsPath(\"Modules/Extension/SuiteScript2/Hydrafacial.ProfileFields.Service.ss\"), true),\r\n\r\n      initialize: function (attributes, options) {\r\n        _.extend(this, attributes);\r\n        this.options = {};\r\n        this.set('options', options);\r\n\r\n        this.on('change:profileFields', function (model, profileFields) {\r\n          model.set('profileFields', profileFields, {silent: false});\r\n        });\r\n        this.trigger('change:profileFields', this, (attributes && attributes.profileFields) || {});\r\n      }\r\n    }\r\n    , classProperties);\r\n  });\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\JavaScript\\TermsTracking.Extension.js","type":"application/javascript","contents":"define('TermsTracking.Extension'\r\n  , [\r\n    'TermsTracking.Extension.View',\r\n    'Hydrafacial.ProfileFields.SS2Model',\r\n    'underscore'\r\n  ]\r\n  , function (\r\n    TermsTrackingExtensionView,\r\n    ProfileFieldsSS2Model,\r\n    _\r\n  ) {\r\n    'use strict';\r\n\r\n    return {\r\n      mountToApp: function mountToApp(container) {\r\n        var PROFILE       = container.getComponent('UserProfile');\r\n        var ENVIRONMENT   = container.getComponent('Environment');\r\n        var LAYOUT        = container.getComponent('Layout');\r\n        var LOGINREGISTER = container.getComponent('LoginRegisterPage');\r\n        var self = this;\r\n        this.profileFields = {};\r\n\r\n        var featureConfig = ENVIRONMENT.getConfig('treveraTerms') || {enabled: 'true', entityField: 'custentity_hf_loyalty_agree_terms'};\r\n        if (featureConfig.enabled) {\r\n          LOGINREGISTER && LOGINREGISTER.on('beforeLogin', function (formFields) {\r\n            window.localStorage.setItem('hfot', 'F'); // clear the terms\r\n          });\r\n\r\n          ProfileFieldsSS2Model.getPromise().then(function (data) {\r\n            self.profileFields = ProfileFieldsSS2Model.getInstance();\r\n            console.log('profileFields loaded', self.profileFields)\r\n            LAYOUT && LAYOUT.cancelableTrigger('profileFields:Loaded', data);\r\n          })\r\n\r\n          LAYOUT.on('profileFields:Loaded', function () {\r\n            if (!self.profileFields.get('agreeTerms') && self.profileFields.isLoggedIn) {\r\n              var modalView = new TermsTrackingExtensionView({application: container});\r\n              LAYOUT.showContent(modalView, {showInModal: false, options: {className: 'modal-confirm-confirm-terms'}});\r\n            }\r\n          });\r\n        }\r\n      }\r\n    };\r\n  });\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\JavaScript\\TermsTracking.Extension.SS2Model.js","type":"application/javascript","contents":"// SS2Model\r\n// -----------------------\r\n// @module TermsTracking\r\ndefine('TermsTracking.Extension.SS2Model', ['Backbone', 'Utils'], function (\r\n  Backbone,\r\n  Utils\r\n) {\r\n  'use strict';\r\n\r\n  return Backbone.Model.extend({\r\n    //@property {String} urlRoot\r\n    urlRoot: Utils.getAbsoluteUrl(getExtensionAssetsPath(\"Modules/Extension/SuiteScript2/TermsTracking.SS2.Service.ss\"), true)\r\n  });\r\n});\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\JavaScript\\TermsTracking.Extension.View.js","type":"application/javascript","contents":"// @module TermsTracking.Extension\r\ndefine('TermsTracking.Extension.View'\r\n  , [\r\n    'SCView'\r\n    , 'TermsTracking.Extension.SS2Model'\r\n    , 'GlobalViews.Message.View'\r\n    , 'trevera_terms_modal.tpl'\r\n    , 'underscore'\r\n    , 'Backbone'\r\n  ]\r\n  , function (\r\n    SCViewModule\r\n    , TermsTrackingSS2Model\r\n    , GlobalViewsMessage\r\n    , view_tpl\r\n    , _\r\n    , Backbone\r\n  ) {\r\n    'use strict';\r\n\r\n    var SCView = SCViewModule.SCView;\r\n\r\n    function AgreeTermsView(options) {\r\n      SCView.call(this, options);\r\n      this.application = options.application;\r\n      this.template    = view_tpl;\r\n      this.termsCode   = '';\r\n      this.LAYOUT      = this.application.getComponent('Layout');\r\n      var self         = this;\r\n      var config       = this.application.getComponent('Environment').getConfig('treveraTerms') || {};\r\n      if (config.termsCMSPage && config.termsCMSPage.length > 0) {\r\n        jQuery.ajax(config.termsCMSPage).done(function (data) {\r\n          console.log(data);\r\n          if (data && data.data && data.data.length > 0) {\r\n            self.termsCode = data.data[0].fields.custrecord_html_clob_html;\r\n            self.render();\r\n          }\r\n        })\r\n      }\r\n      else {\r\n        console.log('terms not configured - configure or popup will be blank.')\r\n      }\r\n    }\r\n\r\n    AgreeTermsView.prototype             = Object.create(SCView.prototype);\r\n    AgreeTermsView.prototype.constructor = AgreeTermsView;\r\n\r\n    AgreeTermsView.prototype.getTitle = function () { return 'Please Agree to the Terms and Conditions' }\r\n\r\n    AgreeTermsView.prototype.showError = function () {\r\n      this.LAYOUT.showMessage({message: this.error.errorMessage, type: 'error', selector: 'Terms.Alerts',});\r\n      this.error = null;\r\n    }\r\n\r\n    AgreeTermsView.prototype.agreeTerms = function (evt) {\r\n      var self    = this;\r\n      var model   = new TermsTrackingSS2Model();\r\n      var PROFILE = this.application.getComponent('UserProfile');\r\n      PROFILE.getUserProfile().then(function (profile) {\r\n        model.set({action: 'confirmTerms', email: profile.email});\r\n        model.save().done(function (data) {\r\n          console.log(data);\r\n          if (data.success) {\r\n            window.localStorage.setItem('hfot', 'T');\r\n            self.$containerModal && self.$containerModal.removeClass('fade').modal('hide').data('bs.modal', null);\r\n            jQuery('.confirm-terms-modal, .modal-backdrop-custom').hide();\r\n            window.location.reload();\r\n          }\r\n        }).fail(function (data) {\r\n          console.log('fail', data);\r\n          self.error              = {}\r\n          self.error.errorMessage = 'Problem confirming terms.'\r\n        });\r\n      });\r\n    }\r\n\r\n    AgreeTermsView.prototype.declineTerms = function (evt) {\r\n      var self = this;\r\n      if (SC.ENVIRONMENT.SCTouchpoint == 'shopping') {\r\n        window.location.href = SC.SESSION.touchpoints.logout; // hit log out page. Server side log out doesn't work in shopping app\r\n      }\r\n      else {\r\n        var model = new TermsTrackingSS2Model();\r\n        model.set({action: 'declineTerms'});\r\n        model.save().done(function (data) {\r\n          console.log(data)\r\n        }).fail(function (data) {\r\n          console.log('fail', data);\r\n          self.error              = {}\r\n          self.error.errorMessage = 'Problem confirming terms.'\r\n        });\r\n      }\r\n    }\r\n\r\n    AgreeTermsView.prototype.getContext = function () {\r\n      return {\r\n        terms: this.termsCode\r\n      }\r\n    };\r\n\r\n    AgreeTermsView.prototype.getEvents  = function () {\r\n      return {\r\n        'click [data-action=\"decline-terms\"]': 'declineTerms',\r\n        'click [data-action=\"confirm-terms\"]': 'agreeTerms'\r\n      }\r\n    };\r\n\r\n    return AgreeTermsView\r\n  });\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\Sass\\_termstracking-extension.scss","type":"text/x-scss","contents":".modal-backdrop-custom {\r\n    @extend .modal-backdrop;\r\n    opacity: .5;\r\n    z-index: 100;\r\n}\r\n\r\n.confirm-terms-modal {\r\n    z-index: 200;\r\n}\r\n\r\n@media (min-width: $screen-md) {\r\n    .modal-dialog {\r\n        width: 800px;\r\n    }\r\n}\r\n\r\n@media (min-width: $screen-lg) {\r\n    .modal-dialog {\r\n        width: 1000px;\r\n    }\r\n}\r\n\r\n#terms_copy {\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n}\r\n[data-action=\"confirm-terms\"] {\r\n    vertical-align: bottom;\r\n}\r\n[data-action=\"decline-terms\"] {\r\n    margin-right: $sc-margin-lv2;\r\n    vertical-align: bottom;\r\n}\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\SuiteScript2\\Hydrafacial.ProfileFields.Model.js","type":"application/javascript","contents":"/**\r\n * @NApiVersion 2.x\r\n * @NModuleScope TargetAccount\r\n */\r\ndefine(['N/log', 'N/record', 'N/runtime', 'N/search'], function (log, record, runtime, search) {\r\n  'use strict';\r\n\r\n  var _fieldsToLoad = ['custentity_hf_loyalty_agree_terms']\r\n\r\n  return {\r\n    get: function (request) {\r\n      var user      = runtime.getCurrentUser();\r\n      var isContact = user.contact > 0;\r\n      var returnObj = {\r\n        agreeTerms: false\r\n      }\r\n\r\n      var lookup           = search.lookupFields({type: search.Type.CUSTOMER, id: user.id, columns: _fieldsToLoad});\r\n      returnObj.agreeTerms = lookup['custentity_hf_loyalty_agree_terms'];\r\n      returnObj.isLoggedIn = true;\r\n\r\n      return returnObj;\r\n    }\r\n  };\r\n})\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\SuiteScript2\\Hydrafacial.ProfileFields.Service.ss","type":null,"contents":"/**\r\n * @NApiVersion 2.x\r\n * @NModuleScope Public\r\n *\r\n * Must be updated to run with elevated permissions\r\n */\r\ndefine(['N/runtime', './Hydrafacial.ProfileFields.Model'], function (runtime, Model) {\r\n  \"use strict\";\r\n\r\n  function isLoggedIn() {\r\n    var user = runtime.getCurrentUser();\r\n    return user.id > 0 && user.role !== 17\r\n  }\r\n\r\n  function service(ctx) {\r\n    var response = {};\r\n    if (isLoggedIn()) {\r\n      switch (ctx.request.method) {\r\n        case 'GET':\r\n          response = Model.get(ctx.request)\r\n          break;\r\n        default:\r\n          response = {\r\n            type   : 'error',\r\n            message: 'Method not supported: ' + ctx.request.method\r\n          };\r\n      }\r\n    }\r\n    else {\r\n      response = {\r\n        type       : 'error',\r\n        message    : 'You must be logged in to use this service',\r\n        isLoggedIn: false\r\n      }\r\n    }\r\n\r\n    ctx.response.write(JSON.stringify(response));\r\n  }\r\n\r\n  return {\r\n    service: service\r\n  };\r\n});\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\SuiteScript2\\TermsTracking.Model.js","type":"application/javascript","contents":"/**\r\n * @NApiVersion 2.1\r\n * @NModuleScope TargetAccount\r\n */\r\ndefine(['N/log', 'N/runtime', 'N/record'], function (log, runtime, record) {\r\n  'use strict';\r\n\r\n  return {\r\n    post: function (request) {\r\n      var body = JSON.parse(request.body || '{}');\r\n      if (body.action && body.action.length > 0) {\r\n        if (body.action === 'confirmTerms') return this.confirmTerms(body);\r\n      }\r\n\r\n      return {\r\n        type   : 'error',\r\n        message: 'Action not defined'\r\n      }\r\n    },\r\n\r\n    confirmTerms: function (requestBodyJSON) {\r\n      var user = runtime.getCurrentUser();\r\n      record.submitFields({type: record.Type.CUSTOMER, id: user.id, values: {custentity_hf_loyalty_agree_terms: true}});\r\n      return {\r\n        success: true,\r\n        message: 'Terms updated.'\r\n      }\r\n    }\r\n  }\r\n})\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\SuiteScript2\\TermsTracking.SS2.Service.ss","type":null,"contents":"/**\r\n * @NApiVersion 2.x\r\n * @NModuleScope Public\r\n *\r\n * Run with elevated permissions\r\n */\r\ndefine(['N/runtime', './TermsTracking.Model'], function (runtime, Model) {\r\n  \"use strict\";\r\n\r\n  var requireLogin = true;\r\n\r\n  function isLoggedIn() {\r\n    var user = runtime.getCurrentUser();\r\n    return user.id > 0 && user.role !== 17\r\n  }\r\n\r\n  function service(ctx) {\r\n    var response = {};\r\n    if (requireLogin) {\r\n      if (isLoggedIn()) {\r\n        switch (ctx.request.method) {\r\n          case 'POST':\r\n            response = Model.post(ctx.request)\r\n            break;\r\n          default:\r\n            response = {\r\n              type   : 'error',\r\n              message: 'Method not supported: ' + ctx.request.method\r\n            };\r\n        }\r\n      }\r\n      else {\r\n        response = {\r\n          type   : 'error',\r\n          message: 'You must be logged in to use this service'\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      switch (ctx.request.method) {\r\n        case 'GET':\r\n          if(ctx.request.parameters.id) response = Model.get(ctx.request)\r\n          else response = Model.list(ctx.request)\r\n          break;\r\n        default:\r\n          response = {\r\n            type   : 'error',\r\n            message: 'Method not supported: ' + ctx.request.method\r\n          };\r\n      }\r\n    }\r\n\r\n    ctx.response.write(JSON.stringify(response));\r\n  }\r\n\r\n  return {\r\n    service: service\r\n  };\r\n});\r\n"},{"path":"\\Trevera\\TreveraTerms@1.0.0\\Modules\\Extension\\Templates\\trevera_terms_modal.tpl","type":"application/vnd.groove-tool-template","contents":"<div class=\"modal-dialog global-views-modal confirm-terms-modal\">\r\n    <div class=\"global-views-modal-content\">\r\n        <div id=\"modal-header\" class=\"global-views-modal-content-header\">\r\n            <h2 class=\"global-views-modal-content-header-title\">\r\n                {{translate 'Please Agree to the Terms and Conditions'}}\r\n            </h2>\r\n        </div>\r\n        <div id=\"modal-body\" data-type=\"modal-body\" class=\"global-views-modal-content-body\">\r\n            {{!--\r\n            <iframe id=\"terms_copy\" height=\"400\" src=\"https://hydrafacial-sb2.scastaging.com/terms-and-conditions\" frameborder=\"0\"></iframe>\r\n            --}}\r\n            {{{terms}}}\r\n        </div>\r\n        <div class=\"modal-footer global-views-modal-footer\">\r\n            <div class=\"error\" data-view=\"Terms.Alerts\"></div>\r\n            <button class=\"button-large button-tertiary\" data-action=\"decline-terms\">I do Not Agree</button>\r\n            <button class=\"button-large button-primary\" data-action=\"confirm-terms\">I agree</button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"modal-backdrop-custom\"></div>\r\n"}],"deployment_time":1695765285861}